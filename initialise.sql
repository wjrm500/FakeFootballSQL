/*

CONFIGURE YER VARIABLES!

*/

SET @num_years = 5; /* Min 1; max âˆž  */
SET @num_systems = 1; /* Min 1; max 8 */
SET @num_divisions_per_system = 2; /* Min 1; max 4 */
SET @num_teams_promoted = 4; /* Min 1; max 10 */
SET @home_advantage = 1.025 /* Min 1; max 1.5 */

/*

CREATE DATABASE AND POPULATE WITH BASE TABLES

*/

DROP DATABASE IF EXISTS soccer_simulation;
CREATE DATABASE soccer_simulation;
USE soccer_simulation;

DROP TABLE IF EXISTS soccer_simulation.`config`;
CREATE TABLE soccer_simulation.`config` (
    `id` INT AUTO_INCREMENT,
    `label` VARCHAR(250),
    `value` VARCHAR(250),
    PRIMARY KEY (`id`)
);
INSERT INTO soccer_simulation.`config` (`label`, `value`)
    VALUES
        ('num_years', @num_years),
        ('num_systems', @num_systems),
        ('num_divisions_per_system', @num_divisions_per_system),
        ('num_teams_promoted', @num_teams_promoted),
        ('home_advantage', @home_advantage);

DROP TABLE IF EXISTS soccer_simulation.`schedule`;
CREATE TABLE soccer_simulation.`schedule` (
	`gameweek` INT,
	`fixture` INT,
	`home` INT,
	`away` INT,
	PRIMARY KEY (`gameweek`, `fixture`),
	INDEX `home` (`home`),
	INDEX `away` (`away`)
);

DROP TABLE IF EXISTS soccer_simulation.`score`;
CREATE TABLE soccer_simulation.`score` (
	`potential` INT,
	`goals` INT,
	`rand_threshold` FLOAT,
	PRIMARY KEY (`potential`, `goals`),
	INDEX `rand_threshold` (`rand_threshold`)
);

DROP TABLE IF EXISTS soccer_simulation.`system`;
CREATE TABLE soccer_simulation.`system` (
	`id` INT AUTO_INCREMENT,
	`year` INT,
	`system_id` INT,
	`system_rating` FLOAT,
	PRIMARY KEY (`id`)
);

DROP TABLE IF EXISTS soccer_simulation.`team`;
CREATE TABLE soccer_simulation.`team` (
	`id` INT AUTO_INCREMENT,
	`team_name` VARCHAR(100),
	`system_id` INT,
	PRIMARY KEY (`id`)
);

DROP TABLE IF EXISTS soccer_simulation.`rating`;
CREATE TABLE soccer_simulation.`rating` (
	`id` INT AUTO_INCREMENT,
	`year` INT,
	`system_id` INT,
	`division` INT,
	`team_id` INT,
	`team_name` VARCHAR(100),
	`rating` FLOAT,
	`att_rating` FLOAT,
	`def_rating` FLOAT,
	PRIMARY KEY (`id`)
);

DROP TABLE IF EXISTS soccer_simulation.`table`;
CREATE TABLE soccer_simulation.`table` (
	`id` INT AUTO_INCREMENT,
	`year` INT,
	`system_id` INT,
	`division` INT,
	`gameweek` INT,
	`rank` INT,
	`team_id` INT,
	`team_name` VARCHAR(100),
	`W` INT,
	`D` INT,
	`L` INT,
	`GF` INT,
	`GA` INT,
	`GD` INT,
	`Pts` INT,
	PRIMARY KEY (`id`),
    INDEX `year` (`year`),
	INDEX `system_id` (`system_id`),
	INDEX `division` (`division`),
	INDEX `gameweek` (`gameweek`),
	INDEX `team_id` (`team_id`)
);

DROP TABLE IF EXISTS soccer_simulation.`table_repository`;
CREATE TABLE soccer_simulation.`table_repository` LIKE soccer_simulation.`table`;

DROP TABLE IF EXISTS soccer_simulation.`form`;
CREATE TABLE soccer_simulation.`form` (
	`id` INT AUTO_INCREMENT,
	`year` INT,
	`system_id` INT,
	`division` INT,
	`gameweek` INT,
	`team_id` INT,
	`team_name` VARCHAR(100),
	`formR` FLOAT,
	`formRD` FLOAT,
	`formGD` FLOAT,
	`formNG` FLOAT,
	`formG` FLOAT,
	`form` FLOAT,
	PRIMARY KEY (`id`),
	INDEX `year` (`year`),
	INDEX `system_id` (`system_id`),
	INDEX `division` (`division`),
	INDEX `gameweek` (`gameweek`),
	INDEX `team_id` (`team_id`)
);

DROP TABLE IF EXISTS soccer_simulation.`form_repository`;
CREATE TABLE soccer_simulation.`form_repository` LIKE soccer_simulation.`form`;

DROP TABLE IF EXISTS soccer_simulation.`result`;
CREATE TABLE soccer_simulation.`result` (
	`id` INT AUTO_INCREMENT,
	`year` INT,
	`system_id` INT,
	`division` INT,
	`gameweek` INT,
	`fixture` INT,
	`team_id_h` INT,
	`team_name_h` VARCHAR(100),
	`rating_h` FLOAT,
	`att_rating_h` FLOAT,
	`def_rating_h` FLOAT,
	`team_id_a` INT,
	`team_name_a` VARCHAR(100),
	`rating_a` FLOAT,
	`att_rating_a` FLOAT,
	`def_rating_a` FLOAT,
	`potential_h` INT,
	`rand_h` FLOAT,
	`potential_a` INT,
	`rand_a` FLOAT,
	`goals_h` INT,
	`goals_a` INT,
	PRIMARY KEY (`id`),
	INDEX `year` (`year`),
	INDEX `system_id` (`system_id`),
	INDEX `division` (`division`),
	INDEX `gameweek` (`gameweek`),
	INDEX `team_id_h` (`team_id_h`),
	INDEX `team_id_a` (`team_id_a`)
);

DROP TABLE IF EXISTS soccer_simulation.`result_repository`;
CREATE TABLE soccer_simulation.`result_repository` LIKE soccer_simulation.`result`;

/*

BUILD GAUSS FUNCTION, USED IN MAIN PROGRAM

*/

DROP FUNCTION IF EXISTS soccer_simulation.gauss;
DELIMITER $$
CREATE FUNCTION soccer_simulation.gauss(`mean` FLOAT, `stdev` FLOAT) RETURNS FLOAT DETERMINISTIC
BEGIN
	
	SET @X = RAND(), @Y = RAND();
	
	SET @gauss = ((SQRT(-2 * LOG(@X)) * COS(2 * PI() * @Y)) * stdev) + mean;
	
	RETURN @gauss;
	
END$$

DELIMITER ;

/*

BUILD MAIN PROGRAM

*/

DROP PROCEDURE IF EXISTS soccer_simulation.simulator;
DELIMITER $$
CREATE PROCEDURE soccer_simulation.simulator()
BEGIN

    SELECT `value` INTO @num_years FROM soccer_simulation.config WHERE `label` = 'num_years';
    SELECT `value` INTO @num_systems FROM soccer_simulation.config WHERE `label` = 'num_systems';
    SELECT `value` INTO @num_divisions_per_system FROM soccer_simulation.config WHERE `label` = 'num_divisions_per_system';
    SELECT `value` INTO @num_teams_promoted FROM soccer_simulation.config WHERE `label` = 'num_teams_promoted';
    SELECT `value` INTO @home_advantage FROM soccer_simulation.config WHERE `label` = 'home_advantage';
	
	SET @`year` = 1;

	WHILE @`year` <= @num_years DO
	
		IF @`year` != 1 THEN 	

			INSERT INTO soccer_simulation.`system` (`year`, system_id, system_rating)
				SELECT @`year` AS `year`
                    , system_id
                    , ROUND(s.system_rating + gauss(0, 1), 2) AS system_rating
				FROM soccer_simulation.`system` AS s
				WHERE s.`year` = @`year` - 1;

		END IF;
	
		SET @system_iterator = 1;

		WHILE @system_iterator <= @num_systems DO

            SELECT system_id, system_rating INTO @system_id, @system_rating
            FROM soccer_simulation.`system`
            WHERE id = @system_iterator;
			
			DROP TABLE IF EXISTS soccer_simulation.temp;
			CREATE TABLE soccer_simulation.temp (
                  division INT
                , `rank` INT
                , team_id INT
                , team_name VARCHAR(50)
                , rating FLOAT
            );	
			
			IF @`year` = 1 THEN

				INSERT INTO soccer_simulation.temp (division, `rank`, team_id, team_name, rating)
					SELECT CEILING(sq.`rank` / 20) AS division
                        , sq.`rank` - (20 * (CEILING(sq.`rank` / 20) - 1)) AS `rank`
                        , sq.team_id
                        , sq.team_name
                        , sq.rating
					FROM (
						SELECT @rownumber := @rownumber + 1 AS `rank`
                            , sq.team_id
                            , sq.team_name
                            , ROUND(@system_rating + 5 - 10 / 20 * (@rownumber - 1), 2) AS rating
						FROM (
							SELECT t.id as team_id
                                , t.team_name
							FROM soccer_simulation.team AS t
							WHERE t.system_id = @system_id
							ORDER BY RAND()
							) AS sq
						CROSS JOIN (SELECT @rownumber := 0) AS dummy
						) AS sq;

			ELSE

				INSERT INTO soccer_simulation.temp (division, `rank`, team_id, team_name, rating)
					SELECT r.division
                        , t.`rank`
                        , r.team_id
                        , r.team_name
                        , r.rating
					FROM soccer_simulation.rating AS r
						JOIN soccer_simulation.`table` AS t ON r.team_id = t.team_id
					WHERE r.`year` = @`year` - 1
						AND r.system_id = @system_id
						AND t.`year` = @`year` - 1
						AND t.gameweek = 38
					ORDER BY r.division ASC
                        , t.`rank` ASC;
							 
				### Promotion
				
				UPDATE soccer_simulation.temp
				SET division = division - 1, rating = rating + 2.5
				WHERE division != 1 AND `rank` <= @num_teams_promoted;
									
				### Relegation
				
				UPDATE soccer_simulation.temp
				SET division = division + 1, rating = rating - 2.5
				WHERE division != @num_divisions_per_system AND `rank` > 20 - @num_teams_promoted;

			END IF;
				
			### Cycling through divisions
			
			SET @division = 1;
			
			WHILE @division <= @num_divisions_per_system DO
			
				SET @league_rating = @system_rating - ((@division - 1) * 10);
			
				DROP TABLE IF EXISTS soccer_simulation.temp_2;
				CREATE TABLE soccer_simulation.temp_2 (
                      team_id INT
                    , team_name VARCHAR(50)
                    , rating FLOAT
                );
				
				INSERT INTO soccer_simulation.temp_2 (team_id, team_name, rating)
					SELECT t.team_id
                        , t.team_name
                        , t.rating
					FROM soccer_simulation.temp AS t
					WHERE t.division = @division;
						
				### Randomly modifying the ratings but making sure that certain conditions are met via a procedure
						
				SET @variable = 0;
			
				WHILE @variable = 0 DO
				
					DROP TABLE IF EXISTS soccer_simulation.temp_3;
					CREATE TABLE soccer_simulation.temp_3 (
                          team_id INT
                        , team_name VARCHAR(50)
                        , rating FLOAT
                    );
					
					INSERT INTO soccer_simulation.temp_3
						SELECT t2.team_id
                            , t2.team_name
                            , ROUND(t2.rating + gauss(0, 2), 2) AS rating
						FROM soccer_simulation.temp_2 AS t2;
					
					SET @normaliser = (SELECT AVG(rating) FROM soccer_simulation.temp_3) - @league_rating;
				
					DROP TABLE IF EXISTS soccer_simulation.temp_4;
					CREATE TABLE soccer_simulation.temp_4 (
                          team_id INT
                        , team_name VARCHAR(50)
                        , rating FLOAT
                    );
					
					INSERT INTO soccer_simulation.temp_4
						SELECT t3.team_id
                            , t3.team_name
                            , ROUND(t3.rating - @normaliser, 2) AS rating
						FROM soccer_simulation.temp_3 AS t3;
					
					SET @maximum = (SELECT MAX(t4.rating) FROM soccer_simulation.temp_4 AS t4);
					
					SET @minimum = (SELECT MIN(t4.rating) FROM soccer_simulation.temp_4 AS t4);
					
					SET @deviation = (SELECT STDDEV(t4.rating) FROM soccer_simulation.temp_4 AS t4);
					
					SET @bottom_deviation = (
						SELECT STDDEV(sq1.rating)
						FROM (
							SELECT *
							FROM soccer_simulation.temp_4 AS t4
							ORDER BY t4.rating ASC
							LIMIT 10
							) AS sq1
						);
					
					IF @maximum BETWEEN @league_rating + 5 AND @league_rating + 10
                    AND @minimum BETWEEN @league_rating - 10 AND @league_rating - 5
                    AND @deviation > 3
                    AND @bottom_deviation < 1.5 THEN

						SET @variable = 1;

					END IF;
					
					END WHILE;
				
				### Adding attack and defence ratings
				
				DROP TABLE IF EXISTS soccer_simulation.temp_5;
				CREATE TABLE soccer_simulation.temp_5 (
                      id INT AUTO_INCREMENT
					, team_id INT
                    , team_name VARCHAR(50)
                    , rating FLOAT
                    , att_rating FLOAT
                    , def_rating FLOAT
                    , PRIMARY KEY (id)
                );
				
				IF @`year` = 1 THEN

					INSERT INTO soccer_simulation.temp_5 (team_id, team_name, rating, att_rating, def_rating)
						SELECT t4.team_id
                            , t4.team_name
                            , t4.rating
                            , ROUND(t4.rating + gauss(0, 1), 2) AS att_rating
                            , NULL AS def_rating
						FROM soccer_simulation.temp_4 AS t4;

				ELSE

					INSERT INTO soccer_simulation.temp_5 (team_id, team_name, rating, att_rating, def_rating)
						SELECT t4.team_id
                            , t4.team_name
                            , t4.rating
                            , ROUND(t4.rating + sq.ad_differential + gauss((sq.ad_differential / - 5), 1), 2) AS att_rating
                            , NULL AS def_rating
						FROM soccer_simulation.temp_4 AS t4
						JOIN (
							SELECT r.team_id
                                , ROUND(r.att_rating - r.rating, 2) AS ad_differential
							FROM soccer_simulation.rating AS r
							WHERE r.`year` = @`year` - 1
							) AS sq
							ON t4.team_id = sq.team_id;

				END IF;
				
				UPDATE soccer_simulation.temp_5
				SET att_rating = rating + 2.5
				WHERE att_rating > rating + 2.5;
				
				UPDATE soccer_simulation.temp_5
				SET att_rating = rating - 2.5
				WHERE att_rating < rating - 2.5;
				
				UPDATE soccer_simulation.temp_5
				SET def_rating = rating + rating - att_rating;
				
				### Adding fixture slots
				
				DROP TABLE IF EXISTS soccer_simulation.temp_6;
				CREATE TABLE soccer_simulation.temp_6 (
                      team_id INT
                    , team_name VARCHAR(50)
                    , rating FLOAT
                    , att_rating FLOAT
                    , def_rating FLOAT
                    , fixture_slot INT
                    , INDEX team_id (team_id)
                ) AS
				
					SELECT t5.team_id
                        , t5.team_name
                        , t5.rating
                        , t5.att_rating
                        , t5.def_rating
                        , sq.fixture_slot
					FROM soccer_simulation.temp_5 AS t5
						JOIN (
							SELECT sq.id
								  , @rownumber := @rownumber + 1 AS fixture_slot
							FROM (
								SELECT t5.id
								FROM soccer_simulation.temp_5 AS t5
								ORDER BY RAND()
								) AS sq
							JOIN (SELECT @rownumber := 0) AS dummy
							) AS sq
							ON t5.id = sq.id
					ORDER BY t5.id;
	
				### Storing the start of season ratings in a table
				
				INSERT INTO soccer_simulation.rating (`year`, system_id, division, team_id, team_name, rating, att_rating, def_rating)
					SELECT @`year`
                        , @system_id
                        , @division
                        , t6.team_id
                        , t6.team_name
                        , t6.rating
                        , t6.att_rating
                        , t6.def_rating
					FROM soccer_simulation.temp_6 AS t6;
					
				### This is where the actual results are generated
					
				SET @gameweek = 1;
			
				WHILE @gameweek <= 38 DO
				
					### Temporary table necessary for stabilising random numbers
					
					DROP TEMPORARY TABLE IF EXISTS soccer_simulation.stabiliser;
					CREATE TEMPORARY TABLE soccer_simulation.stabiliser
						(
						  gameweek INT
						, fixture INT
						, team_id_h INT
						, team_name_h VARCHAR(100)
						, rating_h FLOAT
						, att_rating_h FLOAT
						, def_rating_h FLOAT
						, team_id_a INT
						, team_name_a VARCHAR(100)
						, rating_a FLOAT
						, att_rating_a FLOAT
						, def_rating_a FLOAT
						, potential_h INT
						, rand_h FLOAT
						, potential_a INT
						, rand_a FLOAT
						, PRIMARY KEY (gameweek, fixture)
						);
						
					INSERT INTO soccer_simulation.stabiliser (gameweek
															  , fixture
															  , team_id_h
															  , team_name_h
															  , rating_h
															  , att_rating_h
															  , def_rating_h
															  , team_id_a
															  , team_name_a
															  , rating_a
															  , att_rating_a
															  , def_rating_a
															  , potential_h
															  , rand_h
															  , potential_a
															  , rand_a)			  
						SELECT sq.`*`
							  , ROUND(sq.att_rating_h - sq.def_rating_a + 50) AS potential_h
							  , ROUND(RAND(), 5) AS rand_h
							  , ROUND(sq.att_rating_a - sq.def_rating_h + 50) AS potential_a
							  , ROUND(RAND(), 5) AS rand_a
						FROM (
							SELECT s.gameweek
                                , s.fixture
                                , t6h.team_id AS team_id_h
                                , t6h.team_name AS team_name_h
                                , ROUND(t6h.rating * (@home_advantage + IFNULL(fh.form / 100, 0)), 2) AS rating_h
                                , ROUND(t6h.att_rating * (@home_advantage + IFNULL(fh.form / 100, 0)), 2) AS att_rating_h
                                , ROUND(t6h.def_rating * (@home_advantage + IFNULL(fh.form / 100, 0)), 2) AS def_rating_h
                                , t6a.team_id AS team_id_a
                                , t6a.team_name AS team_name_a
                                , ROUND(t6a.rating * (2 - (@home_advantage - IFNULL(fa.form / 100, 0))), 2) AS rating_a
                                , ROUND(t6a.att_rating * (2 - (@home_advantage - IFNULL(fa.form / 100, 0))), 2) AS att_rating_a
                                , ROUND(t6a.def_rating * (2 - (@home_advantage - IFNULL(fa.form / 100, 0))), 2) AS def_rating_a
							FROM soccer_simulation.temp_6 AS t6h
								JOIN soccer_simulation.`schedule` AS s
									ON t6h.fixture_slot = s.home
								JOIN soccer_simulation.temp_6 AS t6a
									ON s.away = t6a.fixture_slot
								LEFT JOIN soccer_simulation.form AS fh
									ON t6h.team_id = fh.team_id
										AND fh.gameweek = @gameweek - 1
										AND fh.`year` = @`year`
										AND fh.system_id = @system_id
										AND fh.division = @division
								LEFT JOIN soccer_simulation.form AS fa
										ON t6a.team_id = fa.team_id
										AND fa.gameweek = @gameweek - 1
										AND fa.`year` = @`year`
										AND fa.system_id = @system_id
										AND fa.division = @division
							WHERE s.gameweek = @gameweek
								) AS sq;
				
					INSERT INTO soccer_simulation.result (
                        `year`
                        , system_id
                        , division
                        , gameweek
                        , fixture
                        , team_id_h
                        , team_name_h
                        , rating_h
                        , att_rating_h
                        , def_rating_h
                        , team_id_a
                        , team_name_a
                        , rating_a
                        , att_rating_a
                        , def_rating_a
                        , potential_h
                        , rand_h
                        , potential_a
                        , rand_a
                        , goals_h
                        , goals_a
                    )
						SELECT @`year` AS `year`
                            , @system_id AS system_id
                            , @division AS division
                            , st.`*`
                            , IF(sc1.goals IS NULL, 0, MAX(sc1.goals)) AS goals_h
                            , IF(sc2.goals IS NULL, 0, MAX(sc2.goals)) AS goals_a
						FROM soccer_simulation.stabiliser AS st
						LEFT JOIN soccer_simulation.score AS sc1
							ON st.potential_h = sc1.potential
							AND st.rand_h > sc1.rand_threshold
						LEFT JOIN soccer_simulation.score AS sc2
							ON st.potential_a = sc2.potential
							AND st.rand_a > sc2.rand_threshold
						GROUP BY st.gameweek
								 , st.fixture;
								 		
					INSERT INTO soccer_simulation.form (
                        `year`
                        , system_id
                        , division
                        , gameweek
                        , team_id
                        , team_name
                        , formR
                        , formRD
                        , formGD
                        , formNG
                        , formG
                        , form
                    )
						SELECT @`year` AS `year`
                            , @system_id AS system_id
                            , @division AS division
                            , sq.`*`
                            , sq.formR + sq.formRD + sq.formGD AS formNG # Overall gameweek form value without gravity applied
                            , ROUND(sq.formR + sq.formRD + sq.formGD - (IFNULL(f.form, 0) / 5), 2) AS formG # And with gravity applied
                            , ROUND(sq.formR + sq.formRD + sq.formGD - (IFNULL(f.form, 0) / 5) + IFNULL(f.form, 0), 2) AS form # Cumulative
						FROM (
							SELECT r.gameweek
                                , r.team_id_h AS team_id
                                , r.team_name_h AS team_name
                                , IF(r.goals_h > r.goals_a, 0.5, IF(r.goals_h = r.goals_a, 0, -0.5)) AS formR
                                , ROUND((r.rating_a - r.rating_h) / 20, 2) AS formRD
                                , ROUND(IF(ABS(r.goals_h - r.goals_a) = 1, 0, (r.goals_h - r.goals_a) / 20), 2) AS formGD
							FROM soccer_simulation.result AS r
							WHERE r.`year` = @`year`
								AND r.system_id = @system_id
								AND r.division = @division
								AND r.gameweek = @gameweek
							
							UNION
							
							SELECT r.gameweek
                                , r.team_id_a
                                , r.team_name_a
                                , IF(r.goals_a > r.goals_h, 0.5, IF(r.goals_a = r.goals_h, 0, -0.5)) AS formR
                                , ROUND((r.rating_h - r.rating_a) / 20, 2) AS formRD
                                , ROUND(IF(ABS(r.goals_a - r.goals_h) = 1, 0, (r.goals_a - r.goals_h) / 20), 2) AS formGD
                        FROM soccer_simulation.result AS r
							WHERE r.`year` = @`year`
								AND r.system_id = @system_id
								AND r.division = @division
								AND r.gameweek = @gameweek
							) AS sq
							LEFT JOIN soccer_simulation.form AS f
								ON sq.team_id = f.team_id
									AND f.`year` = @`year`
									AND sq.gameweek = f.gameweek + 1;
						
					### Creating human-readable league tables on a per-gameweek basis and sticking them in a "tables" table
				
					INSERT INTO soccer_simulation.`table` (
                        `year`
                        , system_id
                        , division
                        , gameweek
                        , `rank`
                        , team_id
                        , team_name
                        , W
                        , D
                        , L
                        , GF
                        , GA
                        , GD
                        , Pts
                    )	
						SELECT @`year` AS `year`
                            , @system_id AS system_id
                            , @division AS division
                            , @gameweek AS gameweek
                            , ROW_NUMBER() OVER (ORDER BY sq.Pts DESC, sq.GD DESC, sq.GF DESC) AS `rank`
                            , sq.`*`
						FROM (
							SELECT cg.team_id
                                , cg.team_name
                                , cg.W + IFNULL(t.W, 0) AS W
                                , cg.D + IFNULL(t.D, 0) AS D
                                , cg.L + IFNULL(t.L, 0) AS L
                                , cg.GF + IFNULL(t.GF, 0) AS GF
                                , cg.GA + IFNULL(t.GA, 0) AS GA
                                , cg.GD + IFNULL(t.GD, 0) AS GD
                                , cg.Pts + IFNULL(t.Pts, 0) AS Pts
							FROM (
								SELECT sq.team_id
                                    , sq.team_name
                                    , sq.wins AS W
                                    , IF(sq.wins = 0 AND sq.losses = 0, 1, 0) AS D
                                    , sq.losses AS L
                                    , sq.goals_for AS GF
                                    , sq.goals_against AS GA
                                    , sq.goals_for - sq.goals_against AS GD
                                    , IF(sq.wins = 1, 3, IF(sq.losses = 1, 0, 1)) AS Pts 
								FROM (
									SELECT r.team_id_h AS team_id
                                        , r.team_name_h AS team_name
                                        , SUM(IF(r.goals_h > r.goals_a, 1, 0)) AS wins
                                        , SUM(IF(r.goals_h < r.goals_a, 1, 0)) AS losses
                                        , SUM(r.goals_h) AS goals_for
                                        , SUM(r.goals_a) AS goals_against
									FROM soccer_simulation.result AS r
									WHERE r.`year` = @`year`
										AND r.system_id = @system_id
										AND r.division = @division
										AND r.gameweek = @gameweek
									GROUP BY r.team_id_h
										
									UNION
									
									SELECT r.team_id_a
                                        , r.team_name_a
                                        , SUM(IF(r.goals_a > r.goals_h, 1, 0)) AS wins
                                        , SUM(IF(r.goals_a < r.goals_h, 1, 0)) AS losses
                                        , SUM(r.goals_a) AS goals_for
                                        , SUM(r.goals_h) AS goals_against
									FROM soccer_simulation.result AS r
									WHERE r.`year` = @`year`
										AND r.system_id = @system_id
										AND r.division = @division
										AND r.gameweek = @gameweek
									GROUP BY r.team_id_a
									) AS sq
								) AS cg # Current gameweek mini-table
							LEFT JOIN soccer_simulation.`table` AS t
								ON cg.team_id = t.team_id
									AND t.`year` = @`year`
									AND t.gameweek = @gameweek - 1
							) AS sq;
						
					SET @gameweek = @gameweek + 1;
					
					END WHILE;
				
				SET @division = @division + 1;
				
				END WHILE;
		
			SET @system_iterator = @system_iterator + 1;
			
			END WHILE;
		
		### Persisting data to permanent tables

		DELETE FROM soccer_simulation.result
		WHERE `year` = @`year` - 1;

		INSERT INTO soccer_simulation.result_repository (
            `year`, system_id, division, gameweek, fixture,
            team_id_h, team_name_h, rating_h, att_rating_h, def_rating_h,
            team_id_a, team_name_a, rating_a, att_rating_a, def_rating_a,
            potential_h, rand_h, potential_a, rand_a, goals_h, goals_a
        )
			SELECT `year`, system_id, division, gameweek, fixture,
                team_id_h, team_name_h, rating_h, att_rating_h, def_rating_h,
                team_id_a, team_name_a, rating_a, att_rating_a, def_rating_a,
                potential_h, rand_h, potential_a, rand_a, goals_h, goals_a
			FROM soccer_simulation.result AS r;

		DELETE FROM soccer_simulation.form
		WHERE `year` = @`year` - 1;

		INSERT INTO soccer_simulation.form_repository (
            `year`, system_id, division, gameweek, team_id, team_name, formR, formRD, formNG, formG, `form`
        )
			SELECT `year`, system_id, division, gameweek, team_id, team_name, formR, formRD, formNG, formG, `form`
			FROM soccer_simulation.form AS f;

		DELETE FROM soccer_simulation.`table`
		WHERE `year` = @`year` - 1;
		
		INSERT INTO soccer_simulation.table_repository (
            `year`, system_id, division, gameweek, `rank`, team_id, team_name, W, D, L, GF, GA, GD, Pts
        )
			SELECT `year`, system_id, division, gameweek, `rank`, team_id, team_name, W, D, L, GF, GA, GD, Pts
			FROM soccer_simulation.`table` AS t;
		
		SET @`year` = @`year` + 1;
		
		END WHILE;

    DROP TABLE IF EXISTS soccer_simulation.result;

    DROP TABLE IF EXISTS soccer_simulation.form;

    DROP TABLE IF EXISTS soccer_simulation.`table`;

    DROP TABLE IF EXISTS soccer_simulation.temp;

    DROP TABLE IF EXISTS soccer_simulation.temp_2;

    DROP TABLE IF EXISTS soccer_simulation.temp_3;

    DROP TABLE IF EXISTS soccer_simulation.temp_4;

    DROP TABLE IF EXISTS soccer_simulation.temp_5;

    DROP TABLE IF EXISTS soccer_simulation.temp_6;
	
END$$

DELIMITER ;

/*

INSERT VALUES INTO SCHEDULE TABLE

*/

INSERT INTO soccer_simulation.`schedule` (`gameweek`, `fixture`, `home`, `away`)
VALUES
(1, 1, 1, 20),
(1, 2, 2, 19),
(1, 3, 3, 18),
(1, 4, 4, 17),
(1, 5, 5, 16),
(1, 6, 6, 15),
(1, 7, 7, 14),
(1, 8, 8, 13),
(1, 9, 9, 12),
(1, 10, 10, 11),
(2, 1, 19, 1),
(2, 2, 18, 20),
(2, 3, 17, 2),
(2, 4, 16, 3),
(2, 5, 15, 4),
(2, 6, 14, 5),
(2, 7, 13, 6),
(2, 8, 12, 7),
(2, 9, 11, 8),
(2, 10, 10, 9),
(3, 1, 1, 18),
(3, 2, 19, 17),
(3, 3, 20, 16),
(3, 4, 2, 15),
(3, 5, 3, 14),
(3, 6, 4, 13),
(3, 7, 5, 12),
(3, 8, 6, 11),
(3, 9, 7, 10),
(3, 10, 8, 9),
(4, 1, 17, 1),
(4, 2, 16, 18),
(4, 3, 15, 19),
(4, 4, 14, 20),
(4, 5, 13, 2),
(4, 6, 12, 3),
(4, 7, 11, 4),
(4, 8, 10, 5),
(4, 9, 9, 6),
(4, 10, 8, 7),
(5, 1, 1, 16),
(5, 2, 17, 15),
(5, 3, 18, 14),
(5, 4, 19, 13),
(5, 5, 20, 12),
(5, 6, 2, 11),
(5, 7, 3, 10),
(5, 8, 4, 9),
(5, 9, 5, 8),
(5, 10, 6, 7),
(6, 1, 15, 1),
(6, 2, 14, 16),
(6, 3, 13, 17),
(6, 4, 12, 18),
(6, 5, 11, 19),
(6, 6, 10, 20),
(6, 7, 9, 2),
(6, 8, 8, 3),
(6, 9, 7, 4),
(6, 10, 6, 5),
(7, 1, 1, 14),
(7, 2, 15, 13),
(7, 3, 16, 12),
(7, 4, 17, 11),
(7, 5, 18, 10),
(7, 6, 19, 9),
(7, 7, 20, 8),
(7, 8, 2, 7),
(7, 9, 3, 6),
(7, 10, 4, 5),
(8, 1, 13, 1),
(8, 2, 12, 14),
(8, 3, 11, 15),
(8, 4, 10, 16),
(8, 5, 9, 17),
(8, 6, 8, 18),
(8, 7, 7, 19),
(8, 8, 6, 20),
(8, 9, 5, 2),
(8, 10, 4, 3),
(9, 1, 1, 12),
(9, 2, 13, 11),
(9, 3, 14, 10),
(9, 4, 15, 9),
(9, 5, 16, 8),
(9, 6, 17, 7),
(9, 7, 18, 6),
(9, 8, 19, 5),
(9, 9, 20, 4),
(9, 10, 2, 3),
(10, 1, 11, 1),
(10, 2, 10, 12),
(10, 3, 9, 13),
(10, 4, 8, 14),
(10, 5, 7, 15),
(10, 6, 6, 16),
(10, 7, 5, 17),
(10, 8, 4, 18),
(10, 9, 3, 19),
(10, 10, 2, 20),
(11, 1, 1, 10),
(11, 2, 11, 9),
(11, 3, 12, 8),
(11, 4, 13, 7),
(11, 5, 14, 6),
(11, 6, 15, 5),
(11, 7, 16, 4),
(11, 8, 17, 3),
(11, 9, 18, 2),
(11, 10, 19, 20),
(12, 1, 9, 1),
(12, 2, 8, 10),
(12, 3, 7, 11),
(12, 4, 6, 12),
(12, 5, 5, 13),
(12, 6, 4, 14),
(12, 7, 3, 15),
(12, 8, 2, 16),
(12, 9, 20, 17),
(12, 10, 19, 18),
(13, 1, 1, 8),
(13, 2, 9, 7),
(13, 3, 10, 6),
(13, 4, 11, 5),
(13, 5, 12, 4),
(13, 6, 13, 3),
(13, 7, 14, 2),
(13, 8, 15, 20),
(13, 9, 16, 19),
(13, 10, 17, 18),
(14, 1, 7, 1),
(14, 2, 6, 8),
(14, 3, 5, 9),
(14, 4, 4, 10),
(14, 5, 3, 11),
(14, 6, 2, 12),
(14, 7, 20, 13),
(14, 8, 19, 14),
(14, 9, 18, 15),
(14, 10, 17, 16),
(15, 1, 1, 6),
(15, 2, 7, 5),
(15, 3, 8, 4),
(15, 4, 9, 3),
(15, 5, 10, 2),
(15, 6, 11, 20),
(15, 7, 12, 19),
(15, 8, 13, 18),
(15, 9, 14, 17),
(15, 10, 15, 16),
(16, 1, 5, 1),
(16, 2, 4, 6),
(16, 3, 3, 7),
(16, 4, 2, 8),
(16, 5, 20, 9),
(16, 6, 19, 10),
(16, 7, 18, 11),
(16, 8, 17, 12),
(16, 9, 16, 13),
(16, 10, 15, 14),
(17, 1, 1, 4),
(17, 2, 5, 3),
(17, 3, 6, 2),
(17, 4, 7, 20),
(17, 5, 8, 19),
(17, 6, 9, 18),
(17, 7, 10, 17),
(17, 8, 11, 16),
(17, 9, 12, 15),
(17, 10, 13, 14),
(18, 1, 3, 1),
(18, 2, 2, 4),
(18, 3, 20, 5),
(18, 4, 19, 6),
(18, 5, 18, 7),
(18, 6, 17, 8),
(18, 7, 16, 9),
(18, 8, 15, 10),
(18, 9, 14, 11),
(18, 10, 13, 12),
(19, 1, 1, 2),
(19, 2, 3, 20),
(19, 3, 4, 19),
(19, 4, 5, 18),
(19, 5, 6, 17),
(19, 6, 7, 16),
(19, 7, 8, 15),
(19, 8, 9, 14),
(19, 9, 10, 13),
(19, 10, 11, 12),
(20, 1, 20, 1),
(20, 2, 19, 2),
(20, 3, 18, 3),
(20, 4, 17, 4),
(20, 5, 16, 5),
(20, 6, 15, 6),
(20, 7, 14, 7),
(20, 8, 13, 8),
(20, 9, 12, 9),
(20, 10, 11, 10),
(21, 1, 1, 19),
(21, 2, 20, 18),
(21, 3, 2, 17),
(21, 4, 3, 16),
(21, 5, 4, 15),
(21, 6, 5, 14),
(21, 7, 6, 13),
(21, 8, 7, 12),
(21, 9, 8, 11),
(21, 10, 9, 10),
(22, 1, 18, 1),
(22, 2, 17, 19),
(22, 3, 16, 20),
(22, 4, 15, 2),
(22, 5, 14, 3),
(22, 6, 13, 4),
(22, 7, 12, 5),
(22, 8, 11, 6),
(22, 9, 10, 7),
(22, 10, 9, 8),
(23, 1, 1, 17),
(23, 2, 18, 16),
(23, 3, 19, 15),
(23, 4, 20, 14),
(23, 5, 2, 13),
(23, 6, 3, 12),
(23, 7, 4, 11),
(23, 8, 5, 10),
(23, 9, 6, 9),
(23, 10, 7, 8),
(24, 1, 16, 1),
(24, 2, 15, 17),
(24, 3, 14, 18),
(24, 4, 13, 19),
(24, 5, 12, 20),
(24, 6, 11, 2),
(24, 7, 10, 3),
(24, 8, 9, 4),
(24, 9, 8, 5),
(24, 10, 7, 6),
(25, 1, 1, 15),
(25, 2, 16, 14),
(25, 3, 17, 13),
(25, 4, 18, 12),
(25, 5, 19, 11),
(25, 6, 20, 10),
(25, 7, 2, 9),
(25, 8, 3, 8),
(25, 9, 4, 7),
(25, 10, 5, 6),
(26, 1, 14, 1),
(26, 2, 13, 15),
(26, 3, 12, 16),
(26, 4, 11, 17),
(26, 5, 10, 18),
(26, 6, 9, 19),
(26, 7, 8, 20),
(26, 8, 7, 2),
(26, 9, 6, 3),
(26, 10, 5, 4),
(27, 1, 1, 13),
(27, 2, 14, 12),
(27, 3, 15, 11),
(27, 4, 16, 10),
(27, 5, 17, 9),
(27, 6, 18, 8),
(27, 7, 19, 7),
(27, 8, 20, 6),
(27, 9, 2, 5),
(27, 10, 3, 4),
(28, 1, 12, 1),
(28, 2, 11, 13),
(28, 3, 10, 14),
(28, 4, 9, 15),
(28, 5, 8, 16),
(28, 6, 7, 17),
(28, 7, 6, 18),
(28, 8, 5, 19),
(28, 9, 4, 20),
(28, 10, 3, 2),
(29, 1, 1, 11),
(29, 2, 12, 10),
(29, 3, 13, 9),
(29, 4, 14, 8),
(29, 5, 15, 7),
(29, 6, 16, 6),
(29, 7, 17, 5),
(29, 8, 18, 4),
(29, 9, 19, 3),
(29, 10, 20, 2),
(30, 1, 10, 1),
(30, 2, 9, 11),
(30, 3, 8, 12),
(30, 4, 7, 13),
(30, 5, 6, 14),
(30, 6, 5, 15),
(30, 7, 4, 16),
(30, 8, 3, 17),
(30, 9, 2, 18),
(30, 10, 20, 19),
(31, 1, 1, 9),
(31, 2, 10, 8),
(31, 3, 11, 7),
(31, 4, 12, 6),
(31, 5, 13, 5),
(31, 6, 14, 4),
(31, 7, 15, 3),
(31, 8, 16, 2),
(31, 9, 17, 20),
(31, 10, 18, 19),
(32, 1, 8, 1),
(32, 2, 7, 9),
(32, 3, 6, 10),
(32, 4, 5, 11),
(32, 5, 4, 12),
(32, 6, 3, 13),
(32, 7, 2, 14),
(32, 8, 20, 15),
(32, 9, 19, 16),
(32, 10, 18, 17),
(33, 1, 1, 7),
(33, 2, 8, 6),
(33, 3, 9, 5),
(33, 4, 10, 4),
(33, 5, 11, 3),
(33, 6, 12, 2),
(33, 7, 13, 20),
(33, 8, 14, 19),
(33, 9, 15, 18),
(33, 10, 16, 17),
(34, 1, 6, 1),
(34, 2, 5, 7),
(34, 3, 4, 8),
(34, 4, 3, 9),
(34, 5, 2, 10),
(34, 6, 20, 11),
(34, 7, 19, 12),
(34, 8, 18, 13),
(34, 9, 17, 14),
(34, 10, 16, 15),
(35, 1, 1, 5),
(35, 2, 6, 4),
(35, 3, 7, 3),
(35, 4, 8, 2),
(35, 5, 9, 20),
(35, 6, 10, 19),
(35, 7, 11, 18),
(35, 8, 12, 17),
(35, 9, 13, 16),
(35, 10, 14, 15),
(36, 1, 4, 1),
(36, 2, 3, 5),
(36, 3, 2, 6),
(36, 4, 20, 7),
(36, 5, 19, 8),
(36, 6, 18, 9),
(36, 7, 17, 10),
(36, 8, 16, 11),
(36, 9, 15, 12),
(36, 10, 14, 13),
(37, 1, 1, 3),
(37, 2, 4, 2),
(37, 3, 5, 20),
(37, 4, 6, 19),
(37, 5, 7, 18),
(37, 6, 8, 17),
(37, 7, 9, 16),
(37, 8, 10, 15),
(37, 9, 11, 14),
(37, 10, 12, 13),
(38, 1, 2, 1),
(38, 2, 20, 3),
(38, 3, 19, 4),
(38, 4, 18, 5),
(38, 5, 17, 6),
(38, 6, 16, 7),
(38, 7, 15, 8),
(38, 8, 14, 9),
(38, 9, 13, 10),
(38, 10, 12, 11);

/*

INSERT VALUES INTO SCORE TABLE

*/

INSERT INTO soccer_simulation.`score` (`potential`, `goals`, `rand_threshold`)
VALUES
(0, 1, 0.999),
(0, 2, 0.99975),
(0, 3, 0.9999),
(0, 4, 0.99998),
(0, 5, 1),
(0, 6, 1),
(0, 7, 1),
(0, 8, 1),
(0, 9, 1),
(0, 10, 1),
(0, 11, 1),
(0, 12, 1),
(0, 13, 1),
(0, 14, 1),
(0, 15, 1),
(1, 1, 0.99721),
(1, 2, 0.99958),
(1, 3, 0.99987),
(1, 4, 0.99998),
(1, 5, 1),
(1, 6, 1),
(1, 7, 1),
(1, 8, 1),
(1, 9, 1),
(1, 10, 1),
(1, 11, 1),
(1, 12, 1),
(1, 13, 1),
(1, 14, 1),
(1, 15, 1),
(2, 1, 0.99543),
(2, 2, 0.99941),
(2, 3, 0.99984),
(2, 4, 0.99998),
(2, 5, 1),
(2, 6, 1),
(2, 7, 1),
(2, 8, 1),
(2, 9, 1),
(2, 10, 1),
(2, 11, 1),
(2, 12, 1),
(2, 13, 1),
(2, 14, 1),
(2, 15, 1),
(3, 1, 0.99364),
(3, 2, 0.99924),
(3, 3, 0.99981),
(3, 4, 0.99998),
(3, 5, 1),
(3, 6, 1),
(3, 7, 1),
(3, 8, 1),
(3, 9, 1),
(3, 10, 1),
(3, 11, 1),
(3, 12, 1),
(3, 13, 1),
(3, 14, 1),
(3, 15, 1),
(4, 1, 0.99186),
(4, 2, 0.99907),
(4, 3, 0.99979),
(4, 4, 0.99998),
(4, 5, 1),
(4, 6, 1),
(4, 7, 1),
(4, 8, 1),
(4, 9, 1),
(4, 10, 1),
(4, 11, 1),
(4, 12, 1),
(4, 13, 1),
(4, 14, 1),
(4, 15, 1),
(5, 1, 0.99007),
(5, 2, 0.99889),
(5, 3, 0.99976),
(5, 4, 0.99999),
(5, 5, 1),
(5, 6, 1),
(5, 7, 1),
(5, 8, 1),
(5, 9, 1),
(5, 10, 1),
(5, 11, 1),
(5, 12, 1),
(5, 13, 1),
(5, 14, 1),
(5, 15, 1),
(6, 1, 0.98828),
(6, 2, 0.99872),
(6, 3, 0.99973),
(6, 4, 0.99999),
(6, 5, 1),
(6, 6, 1),
(6, 7, 1),
(6, 8, 1),
(6, 9, 1),
(6, 10, 1),
(6, 11, 1),
(6, 12, 1),
(6, 13, 1),
(6, 14, 1),
(6, 15, 1),
(7, 1, 0.9865),
(7, 2, 0.99855),
(7, 3, 0.9997),
(7, 4, 0.99999),
(7, 5, 1),
(7, 6, 1),
(7, 7, 1),
(7, 8, 1),
(7, 9, 1),
(7, 10, 1),
(7, 11, 1),
(7, 12, 1),
(7, 13, 1),
(7, 14, 1),
(7, 15, 1),
(8, 1, 0.98471),
(8, 2, 0.99838),
(8, 3, 0.99967),
(8, 4, 0.99999),
(8, 5, 1),
(8, 6, 1),
(8, 7, 1),
(8, 8, 1),
(8, 9, 1),
(8, 10, 1),
(8, 11, 1),
(8, 12, 1),
(8, 13, 1),
(8, 14, 1),
(8, 15, 1),
(9, 1, 0.98293),
(9, 2, 0.99821),
(9, 3, 0.99964),
(9, 4, 0.99999),
(9, 5, 1),
(9, 6, 1),
(9, 7, 1),
(9, 8, 1),
(9, 9, 1),
(9, 10, 1),
(9, 11, 1),
(9, 12, 1),
(9, 13, 1),
(9, 14, 1),
(9, 15, 1),
(10, 1, 0.98114),
(10, 2, 0.99804),
(10, 3, 0.99962),
(10, 4, 0.99999),
(10, 5, 1),
(10, 6, 1),
(10, 7, 1),
(10, 8, 1),
(10, 9, 1),
(10, 10, 1),
(10, 11, 1),
(10, 12, 1),
(10, 13, 1),
(10, 14, 1),
(10, 15, 1),
(11, 1, 0.97935),
(11, 2, 0.99787),
(11, 3, 0.99959),
(11, 4, 0.99999),
(11, 5, 1),
(11, 6, 1),
(11, 7, 1),
(11, 8, 1),
(11, 9, 1),
(11, 10, 1),
(11, 11, 1),
(11, 12, 1),
(11, 13, 1),
(11, 14, 1),
(11, 15, 1),
(12, 1, 0.97757),
(12, 2, 0.9977),
(12, 3, 0.99956),
(12, 4, 0.99999),
(12, 5, 1),
(12, 6, 1),
(12, 7, 1),
(12, 8, 1),
(12, 9, 1),
(12, 10, 1),
(12, 11, 1),
(12, 12, 1),
(12, 13, 1),
(12, 14, 1),
(12, 15, 1),
(13, 1, 0.97578),
(13, 2, 0.99753),
(13, 3, 0.99953),
(13, 4, 0.99999),
(13, 5, 1),
(13, 6, 1),
(13, 7, 1),
(13, 8, 1),
(13, 9, 1),
(13, 10, 1),
(13, 11, 1),
(13, 12, 1),
(13, 13, 1),
(13, 14, 1),
(13, 15, 1),
(14, 1, 0.974),
(14, 2, 0.99735),
(14, 3, 0.9995),
(14, 4, 0.99999),
(14, 5, 1),
(14, 6, 1),
(14, 7, 1),
(14, 8, 1),
(14, 9, 1),
(14, 10, 1),
(14, 11, 1),
(14, 12, 1),
(14, 13, 1),
(14, 14, 1),
(14, 15, 1),
(15, 1, 0.97221),
(15, 2, 0.99718),
(15, 3, 0.99947),
(15, 4, 1),
(15, 5, 1),
(15, 6, 1),
(15, 7, 1),
(15, 8, 1),
(15, 9, 1),
(15, 10, 1),
(15, 11, 1),
(15, 12, 1),
(15, 13, 1),
(15, 14, 1),
(15, 15, 1),
(16, 1, 0.97042),
(16, 2, 0.99701),
(16, 3, 0.99945),
(16, 4, 1),
(16, 5, 1),
(16, 6, 1),
(16, 7, 1),
(16, 8, 1),
(16, 9, 1),
(16, 10, 1),
(16, 11, 1),
(16, 12, 1),
(16, 13, 1),
(16, 14, 1),
(16, 15, 1),
(17, 1, 0.96864),
(17, 2, 0.99684),
(17, 3, 0.99942),
(17, 4, 1),
(17, 5, 1),
(17, 6, 1),
(17, 7, 1),
(17, 8, 1),
(17, 9, 1),
(17, 10, 1),
(17, 11, 1),
(17, 12, 1),
(17, 13, 1),
(17, 14, 1),
(17, 15, 1),
(18, 1, 0.96685),
(18, 2, 0.99667),
(18, 3, 0.99939),
(18, 4, 1),
(18, 5, 1),
(18, 6, 1),
(18, 7, 1),
(18, 8, 1),
(18, 9, 1),
(18, 10, 1),
(18, 11, 1),
(18, 12, 1),
(18, 13, 1),
(18, 14, 1),
(18, 15, 1),
(19, 1, 0.96507),
(19, 2, 0.9965),
(19, 3, 0.99936),
(19, 4, 1),
(19, 5, 1),
(19, 6, 1),
(19, 7, 1),
(19, 8, 1),
(19, 9, 1),
(19, 10, 1),
(19, 11, 1),
(19, 12, 1),
(19, 13, 1),
(19, 14, 1),
(19, 15, 1),
(20, 1, 0.96328),
(20, 2, 0.99633),
(20, 3, 0.99933),
(20, 4, 1),
(20, 5, 1),
(20, 6, 1),
(20, 7, 1),
(20, 8, 1),
(20, 9, 1),
(20, 10, 1),
(20, 11, 1),
(20, 12, 1),
(20, 13, 1),
(20, 14, 1),
(20, 15, 1),
(21, 1, 0.94721),
(21, 2, 0.99206),
(21, 3, 0.99868),
(21, 4, 1),
(21, 5, 1),
(21, 6, 1),
(21, 7, 1),
(21, 8, 1),
(21, 9, 1),
(21, 10, 1),
(21, 11, 1),
(21, 12, 1),
(21, 13, 1),
(21, 14, 1),
(21, 15, 1),
(22, 1, 0.93114),
(22, 2, 0.98778),
(22, 3, 0.99802),
(22, 4, 1),
(22, 5, 1),
(22, 6, 1),
(22, 7, 1),
(22, 8, 1),
(22, 9, 1),
(22, 10, 1),
(22, 11, 1),
(22, 12, 1),
(22, 13, 1),
(22, 14, 1),
(22, 15, 1),
(23, 1, 0.91508),
(23, 2, 0.98351),
(23, 3, 0.99736),
(23, 4, 1),
(23, 5, 1),
(23, 6, 1),
(23, 7, 1),
(23, 8, 1),
(23, 9, 1),
(23, 10, 1),
(23, 11, 1),
(23, 12, 1),
(23, 13, 1),
(23, 14, 1),
(23, 15, 1),
(24, 1, 0.89901),
(24, 2, 0.97924),
(24, 3, 0.99671),
(24, 4, 1),
(24, 5, 1),
(24, 6, 1),
(24, 7, 1),
(24, 8, 1),
(24, 9, 1),
(24, 10, 1),
(24, 11, 1),
(24, 12, 1),
(24, 13, 1),
(24, 14, 1),
(24, 15, 1),
(25, 1, 0.88294),
(25, 2, 0.97497),
(25, 3, 0.99605),
(25, 4, 1),
(25, 5, 1),
(25, 6, 1),
(25, 7, 1),
(25, 8, 1),
(25, 9, 1),
(25, 10, 1),
(25, 11, 1),
(25, 12, 1),
(25, 13, 1),
(25, 14, 1),
(25, 15, 1),
(26, 1, 0.86687),
(26, 2, 0.97069),
(26, 3, 0.99539),
(26, 4, 1),
(26, 5, 1),
(26, 6, 1),
(26, 7, 1),
(26, 8, 1),
(26, 9, 1),
(26, 10, 1),
(26, 11, 1),
(26, 12, 1),
(26, 13, 1),
(26, 14, 1),
(26, 15, 1),
(27, 1, 0.82697),
(27, 2, 0.95903),
(27, 3, 0.99366),
(27, 4, 1),
(27, 5, 1),
(27, 6, 1),
(27, 7, 1),
(27, 8, 1),
(27, 9, 1),
(27, 10, 1),
(27, 11, 1),
(27, 12, 1),
(27, 13, 1),
(27, 14, 1),
(27, 15, 1),
(28, 1, 0.78707),
(28, 2, 0.94736),
(28, 3, 0.99193),
(28, 4, 1),
(28, 5, 1),
(28, 6, 1),
(28, 7, 1),
(28, 8, 1),
(28, 9, 1),
(28, 10, 1),
(28, 11, 1),
(28, 12, 1),
(28, 13, 1),
(28, 14, 1),
(28, 15, 1),
(29, 1, 0.74717),
(29, 2, 0.93569),
(29, 3, 0.9902),
(29, 4, 1),
(29, 5, 1),
(29, 6, 1),
(29, 7, 1),
(29, 8, 1),
(29, 9, 1),
(29, 10, 1),
(29, 11, 1),
(29, 12, 1),
(29, 13, 1),
(29, 14, 1),
(29, 15, 1),
(30, 1, 0.70726),
(30, 2, 0.92403),
(30, 3, 0.98847),
(30, 4, 1),
(30, 5, 1),
(30, 6, 1),
(30, 7, 1),
(30, 8, 1),
(30, 9, 1),
(30, 10, 1),
(30, 11, 1),
(30, 12, 1),
(30, 13, 1),
(30, 14, 1),
(30, 15, 1),
(31, 1, 0.66736),
(31, 2, 0.91236),
(31, 3, 0.98674),
(31, 4, 1),
(31, 5, 1),
(31, 6, 1),
(31, 7, 1),
(31, 8, 1),
(31, 9, 1),
(31, 10, 1),
(31, 11, 1),
(31, 12, 1),
(31, 13, 1),
(31, 14, 1),
(31, 15, 1),
(32, 1, 0.62746),
(32, 2, 0.90069),
(32, 3, 0.98501),
(32, 4, 1),
(32, 5, 1),
(32, 6, 1),
(32, 7, 1),
(32, 8, 1),
(32, 9, 1),
(32, 10, 1),
(32, 11, 1),
(32, 12, 1),
(32, 13, 1),
(32, 14, 1),
(32, 15, 1),
(33, 1, 0.61786),
(33, 2, 0.8974),
(33, 3, 0.98424),
(33, 4, 0.99988),
(33, 5, 1),
(33, 6, 1),
(33, 7, 1),
(33, 8, 1),
(33, 9, 1),
(33, 10, 1),
(33, 11, 1),
(33, 12, 1),
(33, 13, 1),
(33, 14, 1),
(33, 15, 1),
(34, 1, 0.60825),
(34, 2, 0.89411),
(34, 3, 0.98346),
(34, 4, 0.99977),
(34, 5, 1),
(34, 6, 1),
(34, 7, 1),
(34, 8, 1),
(34, 9, 1),
(34, 10, 1),
(34, 11, 1),
(34, 12, 1),
(34, 13, 1),
(34, 14, 1),
(34, 15, 1),
(35, 1, 0.59865),
(35, 2, 0.89081),
(35, 3, 0.98269),
(35, 4, 0.99965),
(35, 5, 1),
(35, 6, 1),
(35, 7, 1),
(35, 8, 1),
(35, 9, 1),
(35, 10, 1),
(35, 11, 1),
(35, 12, 1),
(35, 13, 1),
(35, 14, 1),
(35, 15, 1),
(36, 1, 0.58904),
(36, 2, 0.88752),
(36, 3, 0.98192),
(36, 4, 0.99953),
(36, 5, 1),
(36, 6, 1),
(36, 7, 1),
(36, 8, 1),
(36, 9, 1),
(36, 10, 1),
(36, 11, 1),
(36, 12, 1),
(36, 13, 1),
(36, 14, 1),
(36, 15, 1),
(37, 1, 0.57943),
(37, 2, 0.88423),
(37, 3, 0.98114),
(37, 4, 0.99941),
(37, 5, 1),
(37, 6, 1),
(37, 7, 1),
(37, 8, 1),
(37, 9, 1),
(37, 10, 1),
(37, 11, 1),
(37, 12, 1),
(37, 13, 1),
(37, 14, 1),
(37, 15, 1),
(38, 1, 0.56983),
(38, 2, 0.88093),
(38, 3, 0.98037),
(38, 4, 0.9993),
(38, 5, 1),
(38, 6, 1),
(38, 7, 1),
(38, 8, 1),
(38, 9, 1),
(38, 10, 1),
(38, 11, 1),
(38, 12, 1),
(38, 13, 1),
(38, 14, 1),
(38, 15, 1),
(39, 1, 0.56022),
(39, 2, 0.87764),
(39, 3, 0.97959),
(39, 4, 0.99918),
(39, 5, 1),
(39, 6, 1),
(39, 7, 1),
(39, 8, 1),
(39, 9, 1),
(39, 10, 1),
(39, 11, 1),
(39, 12, 1),
(39, 13, 1),
(39, 14, 1),
(39, 15, 1),
(40, 1, 0.55062),
(40, 2, 0.87434),
(40, 3, 0.97882),
(40, 4, 0.99906),
(40, 5, 1),
(40, 6, 1),
(40, 7, 1),
(40, 8, 1),
(40, 9, 1),
(40, 10, 1),
(40, 11, 1),
(40, 12, 1),
(40, 13, 1),
(40, 14, 1),
(40, 15, 1),
(41, 1, 0.52192),
(41, 2, 0.85214),
(41, 3, 0.97064),
(41, 4, 0.996),
(41, 5, 0.99946),
(41, 6, 0.99991),
(41, 7, 1),
(41, 8, 1),
(41, 9, 1),
(41, 10, 1),
(41, 11, 1),
(41, 12, 1),
(41, 13, 1),
(41, 14, 1),
(41, 15, 1),
(42, 1, 0.49322),
(42, 2, 0.82995),
(42, 3, 0.96245),
(42, 4, 0.99295),
(42, 5, 0.99892),
(42, 6, 0.99982),
(42, 7, 1),
(42, 8, 1),
(42, 9, 1),
(42, 10, 1),
(42, 11, 1),
(42, 12, 1),
(42, 13, 1),
(42, 14, 1),
(42, 15, 1),
(43, 1, 0.46452),
(43, 2, 0.80775),
(43, 3, 0.95426),
(43, 4, 0.98989),
(43, 5, 0.99838),
(43, 6, 0.99972),
(43, 7, 1),
(43, 8, 1),
(43, 9, 1),
(43, 10, 1),
(43, 11, 1),
(43, 12, 1),
(43, 13, 1),
(43, 14, 1),
(43, 15, 1),
(44, 1, 0.43582),
(44, 2, 0.78555),
(44, 3, 0.94608),
(44, 4, 0.98683),
(44, 5, 0.99784),
(44, 6, 0.99963),
(44, 7, 1),
(44, 8, 1),
(44, 9, 1),
(44, 10, 1),
(44, 11, 1),
(44, 12, 1),
(44, 13, 1),
(44, 14, 1),
(44, 15, 1),
(45, 1, 0.40712),
(45, 2, 0.76335),
(45, 3, 0.93789),
(45, 4, 0.98377),
(45, 5, 0.9973),
(45, 6, 0.99954),
(45, 7, 1),
(45, 8, 1),
(45, 9, 1),
(45, 10, 1),
(45, 11, 1),
(45, 12, 1),
(45, 13, 1),
(45, 14, 1),
(45, 15, 1),
(46, 1, 0.38739),
(46, 2, 0.74651),
(46, 3, 0.92884),
(46, 4, 0.98142),
(46, 5, 0.99664),
(46, 6, 0.99921),
(46, 7, 0.99992),
(46, 8, 1),
(46, 9, 1),
(46, 10, 1),
(46, 11, 1),
(46, 12, 1),
(46, 13, 1),
(46, 14, 1),
(46, 15, 1),
(47, 1, 0.36765),
(47, 2, 0.72967),
(47, 3, 0.9198),
(47, 4, 0.97906),
(47, 5, 0.99598),
(47, 6, 0.99888),
(47, 7, 0.99984),
(47, 8, 1),
(47, 9, 1),
(47, 10, 1),
(47, 11, 1),
(47, 12, 1),
(47, 13, 1),
(47, 14, 1),
(47, 15, 1),
(48, 1, 0.34792),
(48, 2, 0.71283),
(48, 3, 0.91075),
(48, 4, 0.9767),
(48, 5, 0.99531),
(48, 6, 0.99855),
(48, 7, 0.99976),
(48, 8, 1),
(48, 9, 1),
(48, 10, 1),
(48, 11, 1),
(48, 12, 1),
(48, 13, 1),
(48, 14, 1),
(48, 15, 1),
(49, 1, 0.31465),
(49, 2, 0.67232),
(49, 3, 0.88579),
(49, 4, 0.96927),
(49, 5, 0.99282),
(49, 6, 0.99827),
(49, 7, 0.99988),
(49, 8, 1),
(49, 9, 1),
(49, 10, 1),
(49, 11, 1),
(49, 12, 1),
(49, 13, 1),
(49, 14, 1),
(49, 15, 1),
(50, 1, 0.28139),
(50, 2, 0.6318),
(50, 3, 0.86083),
(50, 4, 0.96184),
(50, 5, 0.99034),
(50, 6, 0.99799),
(50, 7, 1),
(50, 8, 1),
(50, 9, 1),
(50, 10, 1),
(50, 11, 1),
(50, 12, 1),
(50, 13, 1),
(50, 14, 1),
(50, 15, 1),
(51, 1, 0.24359),
(51, 2, 0.59294),
(51, 3, 0.83813),
(51, 4, 0.95076),
(51, 5, 0.98676),
(51, 6, 0.99773),
(51, 7, 0.99997),
(51, 8, 0.99997),
(51, 9, 1),
(51, 10, 1),
(51, 11, 1),
(51, 12, 1),
(51, 13, 1),
(51, 14, 1),
(51, 15, 1),
(52, 1, 0.20579),
(52, 2, 0.55408),
(52, 3, 0.81543),
(52, 4, 0.93968),
(52, 5, 0.98319),
(52, 6, 0.99748),
(52, 7, 0.99994),
(52, 8, 0.99994),
(52, 9, 1),
(52, 10, 1),
(52, 11, 1),
(52, 12, 1),
(52, 13, 1),
(52, 14, 1),
(52, 15, 1),
(53, 1, 0.17989),
(53, 2, 0.50157),
(53, 3, 0.77409),
(53, 4, 0.9161),
(53, 5, 0.97554),
(53, 6, 0.99409),
(53, 7, 0.99934),
(53, 8, 0.99971),
(53, 9, 1),
(53, 10, 1),
(53, 11, 1),
(53, 12, 1),
(53, 13, 1),
(53, 14, 1),
(53, 15, 1),
(54, 1, 0.154),
(54, 2, 0.44906),
(54, 3, 0.73275),
(54, 4, 0.89251),
(54, 5, 0.9679),
(54, 6, 0.9907),
(54, 7, 0.99874),
(54, 8, 0.99948),
(54, 9, 1),
(54, 10, 1),
(54, 11, 1),
(54, 12, 1),
(54, 13, 1),
(54, 14, 1),
(54, 15, 1),
(55, 1, 0.1281),
(55, 2, 0.39654),
(55, 3, 0.69141),
(55, 4, 0.86892),
(55, 5, 0.96025),
(55, 6, 0.98731),
(55, 7, 0.99815),
(55, 8, 0.99924),
(55, 9, 1),
(55, 10, 1),
(55, 11, 1),
(55, 12, 1),
(55, 13, 1),
(55, 14, 1),
(55, 15, 1),
(56, 1, 0.11716),
(56, 2, 0.37206),
(56, 3, 0.65952),
(56, 4, 0.84523),
(56, 5, 0.94594),
(56, 6, 0.98069),
(56, 7, 0.99515),
(56, 8, 0.99827),
(56, 9, 0.99968),
(56, 10, 1),
(56, 11, 1),
(56, 12, 1),
(56, 13, 1),
(56, 14, 1),
(56, 15, 1),
(57, 1, 0.10622),
(57, 2, 0.34758),
(57, 3, 0.62763),
(57, 4, 0.82154),
(57, 5, 0.93163),
(57, 6, 0.97407),
(57, 7, 0.99216),
(57, 8, 0.9973),
(57, 9, 0.99935),
(57, 10, 0.99992),
(57, 11, 1),
(57, 12, 1),
(57, 13, 1),
(57, 14, 1),
(57, 15, 1),
(58, 1, 0.09528),
(58, 2, 0.3231),
(58, 3, 0.59574),
(58, 4, 0.79785),
(58, 5, 0.91733),
(58, 6, 0.96745),
(58, 7, 0.98917),
(58, 8, 0.99633),
(58, 9, 0.99903),
(58, 10, 0.99975),
(58, 11, 1),
(58, 12, 1),
(58, 13, 1),
(58, 14, 1),
(58, 15, 1),
(59, 1, 0.08434),
(59, 2, 0.29861),
(59, 3, 0.56384),
(59, 4, 0.77416),
(59, 5, 0.90302),
(59, 6, 0.96083),
(59, 7, 0.98618),
(59, 8, 0.99537),
(59, 9, 0.9987),
(59, 10, 0.99959),
(59, 11, 0.99994),
(59, 12, 1),
(59, 13, 1),
(59, 14, 1),
(59, 15, 1),
(60, 1, 0.0734),
(60, 2, 0.27413),
(60, 3, 0.53195),
(60, 4, 0.75047),
(60, 5, 0.88871),
(60, 6, 0.95421),
(60, 7, 0.98319),
(60, 8, 0.9944),
(60, 9, 0.99838),
(60, 10, 0.99943),
(60, 11, 0.99984),
(60, 12, 0.99994),
(60, 13, 0.99998),
(60, 14, 0.99999),
(60, 15, 1),
(61, 1, 0.07014),
(61, 2, 0.26776),
(61, 3, 0.52257),
(61, 4, 0.7427),
(61, 5, 0.88326),
(61, 6, 0.95133),
(61, 7, 0.98195),
(61, 8, 0.99398),
(61, 9, 0.99836),
(61, 10, 0.99942),
(61, 11, 0.99984),
(61, 12, 0.99993),
(61, 13, 0.99998),
(61, 14, 0.99999),
(61, 15, 1),
(62, 1, 0.06687),
(62, 2, 0.26138),
(62, 3, 0.5132),
(62, 4, 0.73492),
(62, 5, 0.87781),
(62, 6, 0.94846),
(62, 7, 0.9807),
(62, 8, 0.99357),
(62, 9, 0.99833),
(62, 10, 0.99942),
(62, 11, 0.99983),
(62, 12, 0.99993),
(62, 13, 0.99997),
(62, 14, 0.99999),
(62, 15, 1),
(63, 1, 0.06361),
(63, 2, 0.25501),
(63, 3, 0.50382),
(63, 4, 0.72715),
(63, 5, 0.87236),
(63, 6, 0.94558),
(63, 7, 0.97946),
(63, 8, 0.99315),
(63, 9, 0.99831),
(63, 10, 0.99941),
(63, 11, 0.99983),
(63, 12, 0.99993),
(63, 13, 0.99997),
(63, 14, 0.99999),
(63, 15, 1),
(64, 1, 0.06034),
(64, 2, 0.24863),
(64, 3, 0.49444),
(64, 4, 0.71938),
(64, 5, 0.86691),
(64, 6, 0.94271),
(64, 7, 0.97822),
(64, 8, 0.99274),
(64, 9, 0.99829),
(64, 10, 0.9994),
(64, 11, 0.99983),
(64, 12, 0.99993),
(64, 13, 0.99997),
(64, 14, 0.99999),
(64, 15, 1),
(65, 1, 0.05708),
(65, 2, 0.24226),
(65, 3, 0.48506),
(65, 4, 0.7116),
(65, 5, 0.86146),
(65, 6, 0.93983),
(65, 7, 0.97697),
(65, 8, 0.99232),
(65, 9, 0.99826),
(65, 10, 0.99939),
(65, 11, 0.99983),
(65, 12, 0.99993),
(65, 13, 0.99997),
(65, 14, 0.99999),
(65, 15, 1),
(66, 1, 0.05381),
(66, 2, 0.23589),
(66, 3, 0.47569),
(66, 4, 0.70383),
(66, 5, 0.85601),
(66, 6, 0.93696),
(66, 7, 0.97573),
(66, 8, 0.99191),
(66, 9, 0.99824),
(66, 10, 0.99938),
(66, 11, 0.99982),
(66, 12, 0.99993),
(66, 13, 0.99997),
(66, 14, 0.99999),
(66, 15, 1),
(67, 1, 0.05055),
(67, 2, 0.22951),
(67, 3, 0.46631),
(67, 4, 0.69605),
(67, 5, 0.85056),
(67, 6, 0.93409),
(67, 7, 0.97448),
(67, 8, 0.99149),
(67, 9, 0.99822),
(67, 10, 0.99938),
(67, 11, 0.99982),
(67, 12, 0.99993),
(67, 13, 0.99997),
(67, 14, 0.99999),
(67, 15, 1),
(68, 1, 0.04728),
(68, 2, 0.22314),
(68, 3, 0.45693),
(68, 4, 0.68828),
(68, 5, 0.84511),
(68, 6, 0.93121),
(68, 7, 0.97324),
(68, 8, 0.99108),
(68, 9, 0.9982),
(68, 10, 0.99937),
(68, 11, 0.99982),
(68, 12, 0.99993),
(68, 13, 0.99997),
(68, 14, 0.99999),
(68, 15, 1),
(69, 1, 0.04587),
(69, 2, 0.21893),
(69, 3, 0.45006),
(69, 4, 0.68139),
(69, 5, 0.84083),
(69, 6, 0.92841),
(69, 7, 0.97184),
(69, 8, 0.99042),
(69, 9, 0.99801),
(69, 10, 0.9993),
(69, 11, 0.9998),
(69, 12, 0.99992),
(69, 13, 0.99997),
(69, 14, 0.99999),
(69, 15, 1),
(70, 1, 0.04445),
(70, 2, 0.21473),
(70, 3, 0.44319),
(70, 4, 0.6745),
(70, 5, 0.83654),
(70, 6, 0.92561),
(70, 7, 0.97044),
(70, 8, 0.98976),
(70, 9, 0.99782),
(70, 10, 0.99924),
(70, 11, 0.99978),
(70, 12, 0.99991),
(70, 13, 0.99997),
(70, 14, 0.99999),
(70, 15, 1),
(71, 1, 0.04303),
(71, 2, 0.21052),
(71, 3, 0.43633),
(71, 4, 0.66761),
(71, 5, 0.83225),
(71, 6, 0.92281),
(71, 7, 0.96904),
(71, 8, 0.9891),
(71, 9, 0.99763),
(71, 10, 0.99917),
(71, 11, 0.99976),
(71, 12, 0.99991),
(71, 13, 0.99996),
(71, 14, 0.99999),
(71, 15, 1),
(72, 1, 0.04161),
(72, 2, 0.20632),
(72, 3, 0.42946),
(72, 4, 0.66072),
(72, 5, 0.82797),
(72, 6, 0.92001),
(72, 7, 0.96764),
(72, 8, 0.98843),
(72, 9, 0.99745),
(72, 10, 0.99911),
(72, 11, 0.99974),
(72, 12, 0.9999),
(72, 13, 0.99996),
(72, 14, 0.99999),
(72, 15, 1),
(73, 1, 0.04019),
(73, 2, 0.20211),
(73, 3, 0.42259),
(73, 4, 0.65384),
(73, 5, 0.82368),
(73, 6, 0.91721),
(73, 7, 0.96624),
(73, 8, 0.98777),
(73, 9, 0.99726),
(73, 10, 0.99904),
(73, 11, 0.99973),
(73, 12, 0.99989),
(73, 13, 0.99996),
(73, 14, 0.99999),
(73, 15, 1),
(74, 1, 0.03878),
(74, 2, 0.19791),
(74, 3, 0.41572),
(74, 4, 0.64695),
(74, 5, 0.81939),
(74, 6, 0.91441),
(74, 7, 0.96484),
(74, 8, 0.98711),
(74, 9, 0.99707),
(74, 10, 0.99898),
(74, 11, 0.99971),
(74, 12, 0.99988),
(74, 13, 0.99996),
(74, 14, 0.99999),
(74, 15, 1),
(75, 1, 0.03736),
(75, 2, 0.19351),
(75, 3, 0.40847),
(75, 4, 0.63957),
(75, 5, 0.81484),
(75, 6, 0.9114),
(75, 7, 0.96332),
(75, 8, 0.98638),
(75, 9, 0.99686),
(75, 10, 0.9989),
(75, 11, 0.99969),
(75, 12, 0.99987),
(75, 13, 0.99995),
(75, 14, 0.99998),
(75, 15, 1),
(76, 1, 0.03595),
(76, 2, 0.18911),
(76, 3, 0.40122),
(76, 4, 0.63219),
(76, 5, 0.81029),
(76, 6, 0.90838),
(76, 7, 0.96179),
(76, 8, 0.98565),
(76, 9, 0.99665),
(76, 10, 0.99883),
(76, 11, 0.99966),
(76, 12, 0.99987),
(76, 13, 0.99995),
(76, 14, 0.99998),
(76, 15, 1),
(77, 1, 0.03454),
(77, 2, 0.18471),
(77, 3, 0.39396),
(77, 4, 0.62481),
(77, 5, 0.80573),
(77, 6, 0.90536),
(77, 7, 0.96027),
(77, 8, 0.98492),
(77, 9, 0.99643),
(77, 10, 0.99875),
(77, 11, 0.99964),
(77, 12, 0.99986),
(77, 13, 0.99995),
(77, 14, 0.99998),
(77, 15, 1),
(78, 1, 0.03313),
(78, 2, 0.18031),
(78, 3, 0.38671),
(78, 4, 0.61743),
(78, 5, 0.80118),
(78, 6, 0.90235),
(78, 7, 0.95875),
(78, 8, 0.98419),
(78, 9, 0.99622),
(78, 10, 0.99868),
(78, 11, 0.99962),
(78, 12, 0.99985),
(78, 13, 0.99994),
(78, 14, 0.99998),
(78, 15, 1),
(79, 1, 0.03171),
(79, 2, 0.1759),
(79, 3, 0.37945),
(79, 4, 0.61005),
(79, 5, 0.79663),
(79, 6, 0.89933),
(79, 7, 0.95723),
(79, 8, 0.98346),
(79, 9, 0.99601),
(79, 10, 0.9986),
(79, 11, 0.9996),
(79, 12, 0.99984),
(79, 13, 0.99994),
(79, 14, 0.99998),
(79, 15, 1),
(80, 1, 0.0303),
(80, 2, 0.1715),
(80, 3, 0.3722),
(80, 4, 0.60267),
(80, 5, 0.79207),
(80, 6, 0.89631),
(80, 7, 0.95571),
(80, 8, 0.98274),
(80, 9, 0.9958),
(80, 10, 0.99853),
(80, 11, 0.99958),
(80, 12, 0.99983),
(80, 13, 0.99994),
(80, 14, 0.99998),
(80, 15, 1),
(81, 1, 0.02903),
(81, 2, 0.16543),
(81, 3, 0.36009),
(81, 4, 0.58454),
(81, 5, 0.77097),
(81, 6, 0.877),
(81, 7, 0.94042),
(81, 8, 0.9726),
(81, 9, 0.99101),
(81, 10, 0.99685),
(81, 11, 0.9991),
(81, 12, 0.99964),
(81, 13, 0.99987),
(81, 14, 0.99996),
(81, 15, 0.99999),
(82, 1, 0.02777),
(82, 2, 0.15935),
(82, 3, 0.34798),
(82, 4, 0.5664),
(82, 5, 0.74987),
(82, 6, 0.85768),
(82, 7, 0.92514),
(82, 8, 0.96246),
(82, 9, 0.98622),
(82, 10, 0.99518),
(82, 11, 0.99862),
(82, 12, 0.99945),
(82, 13, 0.99979),
(82, 14, 0.99993),
(82, 15, 0.99999),
(83, 1, 0.0265),
(83, 2, 0.15328),
(83, 3, 0.33587),
(83, 4, 0.54827),
(83, 5, 0.72876),
(83, 6, 0.83837),
(83, 7, 0.90985),
(83, 8, 0.95233),
(83, 9, 0.98143),
(83, 10, 0.9935),
(83, 11, 0.99814),
(83, 12, 0.99926),
(83, 13, 0.99972),
(83, 14, 0.99991),
(83, 15, 0.99998),
(84, 1, 0.02524),
(84, 2, 0.1472),
(84, 3, 0.32376),
(84, 4, 0.53014),
(84, 5, 0.70766),
(84, 6, 0.81905),
(84, 7, 0.89457),
(84, 8, 0.94219),
(84, 9, 0.97664),
(84, 10, 0.99182),
(84, 11, 0.99766),
(84, 12, 0.99907),
(84, 13, 0.99965),
(84, 14, 0.99988),
(84, 15, 0.99998),
(85, 1, 0.02397),
(85, 2, 0.14113),
(85, 3, 0.31165),
(85, 4, 0.512),
(85, 5, 0.68656),
(85, 6, 0.79974),
(85, 7, 0.87928),
(85, 8, 0.93205),
(85, 9, 0.97185),
(85, 10, 0.99015),
(85, 11, 0.99718),
(85, 12, 0.99887),
(85, 13, 0.99958),
(85, 14, 0.99986),
(85, 15, 0.99997),
(86, 1, 0.02271),
(86, 2, 0.13505),
(86, 3, 0.29954),
(86, 4, 0.49387),
(86, 5, 0.66545),
(86, 6, 0.78042),
(86, 7, 0.86399),
(86, 8, 0.92191),
(86, 9, 0.96706),
(86, 10, 0.98847),
(86, 11, 0.99671),
(86, 12, 0.99868),
(86, 13, 0.99951),
(86, 14, 0.99984),
(86, 15, 0.99997),
(87, 1, 0.02144),
(87, 2, 0.12898),
(87, 3, 0.28743),
(87, 4, 0.47574),
(87, 5, 0.64435),
(87, 6, 0.7611),
(87, 7, 0.84871),
(87, 8, 0.91178),
(87, 9, 0.96227),
(87, 10, 0.98679),
(87, 11, 0.99623),
(87, 12, 0.99849),
(87, 13, 0.99943),
(87, 14, 0.99981),
(87, 15, 0.99996),
(88, 1, 0.02018),
(88, 2, 0.1229),
(88, 3, 0.27532),
(88, 4, 0.4576),
(88, 5, 0.62324),
(88, 6, 0.74179),
(88, 7, 0.83342),
(88, 8, 0.90164),
(88, 9, 0.95748),
(88, 10, 0.98512),
(88, 11, 0.99575),
(88, 12, 0.9983),
(88, 13, 0.99936),
(88, 14, 0.99979),
(88, 15, 0.99996),
(89, 1, 0.01891),
(89, 2, 0.11683),
(89, 3, 0.26321),
(89, 4, 0.43947),
(89, 5, 0.60214),
(89, 6, 0.72247),
(89, 7, 0.81814),
(89, 8, 0.8915),
(89, 9, 0.95269),
(89, 10, 0.98344),
(89, 11, 0.99527),
(89, 12, 0.99811),
(89, 13, 0.99929),
(89, 14, 0.99976),
(89, 15, 0.99995),
(90, 1, 0.01765),
(90, 2, 0.11075),
(90, 3, 0.2511),
(90, 4, 0.42134),
(90, 5, 0.58104),
(90, 6, 0.70316),
(90, 7, 0.80285),
(90, 8, 0.88137),
(90, 9, 0.9479),
(90, 10, 0.98176),
(90, 11, 0.99479),
(90, 12, 0.99792),
(90, 13, 0.99922),
(90, 14, 0.99974),
(90, 15, 0.99995),
(91, 1, 0.01638),
(91, 2, 0.10468),
(91, 3, 0.23899),
(91, 4, 0.4032),
(91, 5, 0.55993),
(91, 6, 0.68384),
(91, 7, 0.78757),
(91, 8, 0.87123),
(91, 9, 0.94311),
(91, 10, 0.98009),
(91, 11, 0.99431),
(91, 12, 0.99772),
(91, 13, 0.99915),
(91, 14, 0.99972),
(91, 15, 0.99994),
(92, 1, 0.01512),
(92, 2, 0.0986),
(92, 3, 0.22688),
(92, 4, 0.38507),
(92, 5, 0.53883),
(92, 6, 0.66453),
(92, 7, 0.77228),
(92, 8, 0.86109),
(92, 9, 0.93832),
(92, 10, 0.97841),
(92, 11, 0.99383),
(92, 12, 0.99753),
(92, 13, 0.99907),
(92, 14, 0.99969),
(92, 15, 0.99994),
(93, 1, 0.01385),
(93, 2, 0.09253),
(93, 3, 0.21477),
(93, 4, 0.36694),
(93, 5, 0.51773),
(93, 6, 0.64521),
(93, 7, 0.757),
(93, 8, 0.85096),
(93, 9, 0.93353),
(93, 10, 0.97674),
(93, 11, 0.99335),
(93, 12, 0.99734),
(93, 13, 0.999),
(93, 14, 0.99967),
(93, 15, 0.99993),
(94, 1, 0.01259),
(94, 2, 0.08645),
(94, 3, 0.20266),
(94, 4, 0.3488),
(94, 5, 0.49662),
(94, 6, 0.62589),
(94, 7, 0.74171),
(94, 8, 0.84082),
(94, 9, 0.92874),
(94, 10, 0.97506),
(94, 11, 0.99287),
(94, 12, 0.99715),
(94, 13, 0.99893),
(94, 14, 0.99964),
(94, 15, 0.99993),
(95, 1, 0.01132),
(95, 2, 0.08038),
(95, 3, 0.19055),
(95, 4, 0.33067),
(95, 5, 0.47552),
(95, 6, 0.60658),
(95, 7, 0.72643),
(95, 8, 0.83068),
(95, 9, 0.92395),
(95, 10, 0.97338),
(95, 11, 0.99239),
(95, 12, 0.99696),
(95, 13, 0.99886),
(95, 14, 0.99962),
(95, 15, 0.99992),
(96, 1, 0.01006),
(96, 2, 0.0743),
(96, 3, 0.17844),
(96, 4, 0.31253),
(96, 5, 0.45441),
(96, 6, 0.58726),
(96, 7, 0.71114),
(96, 8, 0.82055),
(96, 9, 0.91916),
(96, 10, 0.97171),
(96, 11, 0.99192),
(96, 12, 0.99677),
(96, 13, 0.99879),
(96, 14, 0.9996),
(96, 15, 0.99992),
(97, 1, 0.00879),
(97, 2, 0.06823),
(97, 3, 0.16633),
(97, 4, 0.2944),
(97, 5, 0.43331),
(97, 6, 0.56795),
(97, 7, 0.69586),
(97, 8, 0.81041),
(97, 9, 0.91437),
(97, 10, 0.97003),
(97, 11, 0.99144),
(97, 12, 0.99657),
(97, 13, 0.99872),
(97, 14, 0.99957),
(97, 15, 0.99991),
(98, 1, 0.00753),
(98, 2, 0.06215),
(98, 3, 0.15422),
(98, 4, 0.27627),
(98, 5, 0.41221),
(98, 6, 0.54863),
(98, 7, 0.68057),
(98, 8, 0.80027),
(98, 9, 0.90958),
(98, 10, 0.96835),
(98, 11, 0.99096),
(98, 12, 0.99638),
(98, 13, 0.99864),
(98, 14, 0.99955),
(98, 15, 0.99991),
(99, 1, 0.00626),
(99, 2, 0.05608),
(99, 3, 0.14211),
(99, 4, 0.25813),
(99, 5, 0.3911),
(99, 6, 0.52932),
(99, 7, 0.66529),
(99, 8, 0.79014),
(99, 9, 0.90479),
(99, 10, 0.96668),
(99, 11, 0.99048),
(99, 12, 0.99619),
(99, 13, 0.99857),
(99, 14, 0.99952),
(99, 15, 0.9999),
(100, 1, 0.005),
(100, 2, 0.05),
(100, 3, 0.13),
(100, 4, 0.24),
(100, 5, 0.37),
(100, 6, 0.51),
(100, 7, 0.65),
(100, 8, 0.78),
(100, 9, 0.9),
(100, 10, 0.965),
(100, 11, 0.99),
(100, 12, 0.996),
(100, 13, 0.9985),
(100, 14, 0.9995),
(100, 15, 0.9999);

/*

INSERT VALUES INTO SYSTEM TABLE

*/

DROP PROCEDURE IF EXISTS soccer_simulation.insert_values_into_system_table;
DELIMITER $$
CREATE PROCEDURE soccer_simulation.insert_values_into_system_table()
BEGIN

    DROP TEMPORARY TABLE IF EXISTS soccer_simulation.available_system_ids;
    CREATE TEMPORARY TABLE soccer_simulation.available_system_ids
    (
        available_system_id INT
    );

    SET @iterator = 1;

    WHILE @iterator <= 16 DO

        INSERT INTO soccer_simulation.available_system_ids (available_system_id)
            VALUES (@iterator);

        SET @iterator = @iterator + 1;

        END WHILE;

    SET @iterator = 1;

    SET @max_iterations = (SELECT `value` FROM soccer_simulation.config WHERE `label` = 'num_systems');

    WHILE @iterator <= @max_iterations DO

        SET @system_id = (
            SELECT available_system_id
            FROM soccer_simulation.available_system_ids
            ORDER BY RAND()
            LIMIT 1
        );

        DELETE FROM soccer_simulation.available_system_ids WHERE available_system_id = @system_id;

        SET @system_rating = (SELECT 75 + gauss(0, 5));

        INSERT INTO soccer_simulation.system (`year`, system_id, system_rating)
            VALUES (1, @system_id, @system_rating);
        
        SET @iterator = @iterator + 1;

        END WHILE;

END$$
DELIMITER ;
CALL soccer_simulation.insert_values_into_system_table;
DROP PROCEDURE IF EXISTS soccer_simulation.insert_values_into_system_table;

/*

INSERT VALUES INTO TEAM TABLE

*/

DROP TEMPORARY TABLE IF EXISTS soccer_simulation.team_temp;
CREATE TEMPORARY TABLE soccer_simulation.team_temp
    (
        team_name VARCHAR(100),
        system_id INT
    );

INSERT INTO soccer_simulation.`team_temp` (`team_name`, `system_id`)
VALUES
('Aigonir', 14),
('Ancalessin', 14),
('Angniling', 3),
('Anortupia', 13),
('Anthan', 14),
('Apizzi', 13),
('Apollentium', 13),
('Aquiterna', 13),
('Aquitum', 13),
('Ardotalium', 13),
('Aricum', 13),
('Ariolitum', 13),
('Asaphon', 14),
('Astelix', 13),
('Astris', 13),
('Aun-Zing', 3),
('Ausellae', 13),
('Bachimchuzu', 3),
('Baitingsi', 3),
('Baji', 7),
('Bakumbing', 3),
('BankyÃ©n', 12),
('Banten', 12),
('Batugito', 7),
('Begebesi', 7),
('Bemkhyan', 12),
('Betigu', 7),
('Bimsanni', 3),
('Binzhumi', 3),
('Birchozan', 2),
('Blamath', 14),
('Boku', 7),
('Boshgarig', 2),
('Bovium', 13),
('Brutupiae', 13),
('Bukumshangra', 3),
('Buleg', 2),
('Bunlyan', 12),
('Busun', 3),
('Buzoku', 7),
('Byimsyun', 12),
('Byintun', 12),
('Camulanti', 13),
('Capiolix', 13),
('Castella', 13),
('Cefalipolia', 13),
('Chagang', 3),
('Chanazim', 3),
('Chan-Kelursi', 2),
('Chanzhing', 3),
('Chape-Menzam', 2),
('Chash-Buli', 2),
('Chasingbum', 3),
('Chep-Lubnam', 2),
('Chetnumzhap', 2),
('Chet-Roge', 2),
('Chiaventum', 13),
('Chichumo', 2),
('Chimgiror', 2),
('Chimkipzhor', 2),
('Chingsun', 3),
('Chi-Ped', 2),
('Chitaz-Mok', 2),
('Chop-Tezh', 2),
('Chore-Morid', 2),
('Chuamshisun', 3),
('Chushlub-Zam', 2),
('Chutagisasun', 3),
('Colium', 13),
('Colix', 13),
('Colongari', 13),
('Confelsium', 13),
('Cornovum', 13),
('Cremontia', 13),
('Dagdodduk', 1),
('Dagmok', 2),
('Dagpedrig', 2),
('DÃ¢kkÃªdgÃ¢x', 6),
('DÃ¡nghyontyen', 12),
('Dasgid', 1),
('Dashmun', 1),
('Dassin', 1),
('Debkes-Li', 2),
('Debzhok', 2),
('Dedshus', 1),
('Denshlag', 16),
('Desh Gengad', 1),
('Desh Nottog', 1),
('Desh Shandam', 1),
('DexnÃ¢d', 6),
('Dimgiddet', 1),
('Dimmintish', 1),
('Dingostlam', 16),
('Dingrilu', 3),
('Dingzhi', 3),
('Dinkish', 1),
('Discath', 14),
('Discoro', 14),
('Distensag', 1),
('Ditezh-Rig', 2),
('Di-Zhedlur', 2),
('Dodgag', 1),
('Dokdim', 1),
('Dokglash', 16),
('Domgut', 16),
('Doskagnan', 1),
('DotÃªkskÃ¢kky', 6),
('Dracorchir', 14),
('Dragiamut', 14),
('Dragiathamut', 14),
('Dragochi', 14),
('Drakord', 14),
('Dramothusin', 14),
('Dranthusa', 14),
('Drolvagon', 14),
('Drothasa', 14),
('Dudkishnat', 1),
('Dudocorine', 13),
('Dugekumu', 7),
('Dunnit', 16),
('Dunryon', 12),
('Dunshang', 3),
('Dunshokkem', 1),
('Duskemy', 6),
('Dussad', 1),
('Dutshit', 1),
('DwenghyÃ­n', 12),
('Dydket', 6),
('DydxgÃªmexsÃ¢d', 6),
('Ebovium', 13),
('Eldraconir', 14),
('Elusaphon', 14),
('Elusine', 14),
('Elyuksun', 15),
('Emmustup', 15),
('Entimiglia', 13),
('Epkyot', 15),
('Epsyum', 15),
('Eriffin', 14),
('Eriongue', 14),
('Erros', 14),
('Essyetpep', 15),
('Etorum', 13),
('Ettum', 15),
('Fafnis', 14),
('Falamoon', 14),
('Falanovis', 13),
('Faldraco', 14),
('Falduine', 14),
('Falevise', 14),
('Falkonia', 14),
('Fangillum', 13),
('Farakord', 14),
('Farax', 14),
('Farserion', 14),
('Feliaeteryx', 13),
('Feroniacate', 13),
('Ferratonia', 13),
('Feyros', 14),
('Firago', 14),
('Fkashkut', 11),
('FkulfnÃ­kÂ ', 11),
('Fkulma', 11),
('FkulsÃ­pnap', 11),
('FkutishnukÂ ', 11),
('Flaktu', 11),
('Flamelduin', 14),
('FlÃ¡shlÃ­nÃ­l', 11),
('FlusÃ¡tflÃ¡nis', 11),
('Fnanfpi', 11),
('FpÃ¡flÃ¡sÃ­p', 11),
('FpifmunnÃ­', 11),
('FpishkÃ­lÂ ', 11),
('Gadshun', 1),
('Gagezuti', 7),
('Gagglog', 16),
('Gagkussuk', 1),
('Gagob-zu-Nel', 2),
('Gagsox', 6),
('GagtÃªk', 6),
('Gaksheg', 1),
('GÃ¢lrajqlan', 9),
('Gamkungshin', 3),
('Gammunsuprip', 8),
('Gamtedko', 6),
('Ganagi', 7),
('GÃ¢ngglat', 9),
('Gankes', 1),
('Gantinpep', 8),
('GanynxnÃªxÃªk', 6),
('Gapedu', 7),
('Garicum', 13),
('Gariolipons', 13),
('Gashklon', 16),
('Gatogi', 6),
('GÃ¢tsdisgÃªg', 6),
('GÃ¢xskÃ¢skit', 6),
('Gegobbe', 2),
('Gekasemu', 7),
('Gekmignet', 1),
('Gemskit', 6),
('Gemsluktig', 16),
('Gemtotin', 6),
('Gentuseptellis', 13),
('GÃªssos', 9),
('Getschuga', 7),
('Getshodsit', 1),
('Ghamghon', 12),
('Ghonqen', 12),
('Ghwintyon', 12),
('GhyÃ­nten', 12),
('Ghyonton', 12),
('Giangta', 3),
('Gibu Zoni', 7),
('Gidshidnak', 1),
('Gignom', 16),
('GikÃªgnaxni', 6),
('Giknat', 16),
('Gilmittol', 8),
('Gimbiri', 3),
('Gimunkin', 3),
('Gingkuzing', 3),
('Ginglura', 3),
('Ginkamsaj', 8),
('Ginsiru', 3),
('Giumangpin', 3),
('Glaegal', 14),
('Glagia', 14),
('Glagochi', 14),
('Glamaurol', 14),
('Glamoth', 14),
('Glashgug', 16),
('Glasshlut', 16),
('Glatmutnglil', 9),
('GlatsÃ¢r', 9),
('Glauros', 14),
('Glegnesh', 16),
('Gletglin', 16),
('Gliddom', 16),
('Glikslosh', 16),
('Glogguk', 16),
('Glonnesh', 16),
('Glungpyr', 9),
('Glustig', 16),
('Glyrpagglung', 9),
('Goddet', 1),
('Godipu Kano', 7),
('Gojudoke', 7),
('Gokkashmag', 1),
('Gokneddash', 1),
('Gomslosh', 16),
('Gontlashtlus', 16),
('Gornong', 8),
('Gorzhed', 2),
('Gotaji', 7),
('Gotnesh', 16),
('Grionire', 14),
('Guddig', 1),
('Gugatschiba', 7),
('Gugkom', 8),
('Gugmontat', 16),
('Gugslot', 16),
('GukÃªk', 6),
('Gumchannu', 3),
('Gunexnik', 6),
('Gungkum', 3),
('Gushnlaktlig', 16),
('Gushuring', 3),
('Gusslas', 16),
('Gylplalvlyv', 9),
('GyqnglÃ¢jjem', 9),
('GyxnÃ¢kxaxtÃªk', 6),
('Haedrakon', 14),
('Hahi Zhisate', 7),
('Haimiu', 5),
('Haimniukkuan', 5),
('Hakoke', 7),
('Hamaug', 14),
('Henido', 7),
('Hiamuak', 5),
('Hiawuaâ€˜ain', 5),
('Hikinogi', 7),
('Hispellusca', 13),
('Hitamo', 7),
('Hiumluipnai', 5),
('Hiuwual', 5),
('Hodugi Kuta', 7),
('Hokotschidu', 7),
('Hopepoga', 7),
('Hualâ€˜iaâ€˜kuahÂ ', 5),
('Hualailpuam', 5),
('Huammuak', 5),
('Huammuinlau', 5),
('Huanniam', 5),
('Huikpua', 5),
('Hydraki', 14),
('Intellum', 13),
('Izikung', 3),
('JÃ¢gjyqmlejÂ ', 9),
('Jangqlys', 9),
('Janjangevkat', 8),
('Jelnoplopjuk', 8),
('Jengil', 8),
('Jengnamleq', 9),
('Jeskam', 8),
('Jitoga', 7),
('Jitscho', 7),
('Jlagpyjngir', 9),
('Jlajlommyt', 9),
('JlÃªrslojjlor', 9),
('JlesqlyngsÃªs', 9),
('Jlistelpis', 9),
('JlistlÃ¢l', 9),
('Jlornglegjyt', 9),
('Joglestap', 8),
('Jogriprigtor', 8),
('Jopediini', 7),
('Jowu', 7),
('Juqnav', 8),
('JurplÃ¢m', 9),
('Jytngyplyg', 9),
('Ka-Chorga', 2),
('Kadiraz', 2),
('KÃ¢dskÃª', 6),
('Kagmeknunnus', 8),
('Kagnodshus', 1),
('Kagsednum', 1),
('Kaguki', 7),
('Kahigeme', 7),
('Kaiâ€˜nuihliak', 5),
('Kaipâ€˜uihpui', 5),
('Kaippiunliah', 5),
('KÃ¡knuk', 11),
('KÃ¢kxnekkym', 6),
('Kalagochir', 14),
('Kalamut', 14),
('Kaldraki', 14),
('Kalessine', 14),
('Kaleviath', 14),
('Kali ToskÃ¯s', 4),
('Kalkonir', 14),
('Kamdokslug', 16),
('KanÃ¡t Fnipun', 11),
('Kangu', 3),
('Kanipina\'u', 5),
('Kannem', 8),
('Kanpaljup', 8),
('KÃ¢nxkÃ¢g', 6),
('KÃ¡pÃ­nflÃ¡', 11),
('KÃ¡ptiplussu', 11),
('Kasgikgash', 1),
('Kashglittlok', 16),
('Kashinzi', 3),
('KÃ¡shli', 11),
('KÃ¢sjÃ¢ngjiq', 9),
('KÃ¢skÃ¢', 6),
('Kasklim', 16),
('KÃ¢spegqeklik', 9),
('Katlaug', 14),
('Katlunnam', 8),
('KatspÃ«skes', 4),
('Kaulual', 5),
('Kauwâ€˜iukiaÂ ', 5),
('KedydxtÃ¢xkÃª', 6),
('KÃªktok', 6),
('Kemshon', 12),
('Kemyon', 12),
('Kenghyin', 12),
('Kensyun', 12),
('Kentin', 12),
('KÃªrjlorvuqÂ ', 9),
('Keshed-Raz', 2),
('Kesmim', 1),
('Kewobi Tewu', 7),
('Kexxgode', 6),
('KhembÃ­n', 12),
('KhemshyÃ­n', 12),
('KhyÃ¡mtun', 12),
('KhyanshÃ­n', 12),
('Kiamauwnia', 5),
('Kianlailuap', 5),
('Kijo', 7),
('Kikslip', 10),
('KilÃ«nspo', 4),
('Kimdu', 3),
('Kimsun', 3),
('Kimsyin', 12),
('Kimuptuk', 11),
('Kingtaru', 3),
('KÃ­nsnus', 11),
('Kipibo Mesa', 7),
('Kishgek', 1),
('Kishkud', 1),
('Kiskak', 10),
('Kiskatko', 4),
('Kista', 11),
('Kitdlotgut', 16),
('Kitklon', 16),
('Kitschono', 7),
('Kiukaiâ€˜muak', 5),
('Kiupianaul', 5),
('Klakgog', 16),
('Klekgesh', 16),
('Klimmjut', 10),
('Klisslis', 10),
('Klonshlig', 16),
('Kluntos', 10),
('KodÃ¢xi', 6),
('Koglizhub', 2),
('Kogsi-Leli', 2),
('Koltumkyep', 15),
('Komaggeded', 6),
('Kommanplum', 10),
('Komyx', 6),
('Konramsol', 8),
('KopÃ«nstimÃ¯s', 4),
('Koshkat', 16),
('Koshmes', 1),
('KoskÃ«sslÃ¤', 4),
('Kospa-Shuch', 2),
('Kotka PÃ«stas', 4),
('KotskÃ¯', 4),
('Kuahhuan', 5),
('Kuaniun', 5),
('Kubungkapi', 3),
('Kuikkiakui', 5),
('Kuikwaun', 5),
('Kuilluip', 5),
('Kuji Nezo', 7),
('KukÃ¢sma', 6),
('Kukingpu', 3),
('Kumikim', 3),
('Kumshin', 3),
('Kumsriplen', 10),
('KunflinutÂ ', 11),
('Kungchin', 3),
('KunÃ­slinÂ ', 11),
('Kunshlup', 11),
('Kunspimak', 11),
('Kupustel', 15),
('KusÃ«lspastu', 4),
('Kusgot', 1),
('Kushgadsum', 16),
('Kuskan', 1),
('Kuta Kaguki', 7),
('Kuwati Kope', 7),
('Kwinnjot', 10),
('Kwut', 15),
('Kyemsen', 12),
('Kyemsen', 12),
('KyÃ­ntyun', 12),
('KyÃ­ntyun', 12),
('Kykxkaxaxkux', 6),
('Kyummyamnyon', 12),
('Lachko', 2),
('Laesalium', 13),
('Lagentum', 13),
('Laggensup', 8),
('Lailâ€˜uimpain', 5),
('Lailpai', 5),
('Lalmis', 10),
('Lalvonnij', 8),
('Langriming', 3),
('Langtus', 9),
('Lannrisslip', 10),
('LapkÃ¡kmunnis', 11),
('Laplol', 10),
('LashlÃ¡mun', 11),
('LÃ¡sna', 11),
('Lasslin', 4),
('LÃ¤sslustis', 4),
('LÃ¤ssnap', 4),
('LÃ¤sspÃ«', 4),
('LÃ¡sul SuttÃ¡k', 11),
('Latistraton', 13),
('Laukianliu', 5),
('Laukkuikniap', 5),
('Lemkhyan', 12),
('Lemnutep', 15),
('Lemsol', 15),
('LÃ«nsnusso', 4),
('Leodubratis', 13),
('Lepgorsen', 8),
('Lepnonlor', 8),
('Leptot', 8),
('LÃªrngirÂ ', 9),
('LÃªrvlÃªvjlyj', 9),
('Lessinen', 14),
('Lesslu', 4),
('LetsnilÃ¯n', 4),
('Leviscord', 14),
('LiahluanÂ ', 5),
('Liahpiun', 5),
('Liappaim', 5),
('Li-Chushpe', 2),
('Li-Gagob', 2),
('Ligorrid', 2),
('Liming', 3),
('Limshi-Bung', 3),
('Linftu', 11),
('Lingsun', 3),
('Linkhyan', 12),
('Linlyan', 12),
('LinnappÃ­n', 11),
('LÃ­nsÃ¡mus', 11),
('LishpÃ­mÂ ', 11),
('LiskessosspÃ¯', 4),
('Lisnos', 10),
('LÃ¯snu', 4),
('Lispostus', 4),
('Ljampen', 10),
('Ljamtjos', 10),
('Ljomslos', 10),
('Loltatpjis', 10),
('Lomvirpuntin', 8),
('Londaterme', 13),
('Longulanda', 13),
('Lonscandis', 13),
('Loqtennej', 8),
('Loslintul', 10),
('Lotnyus', 15),
('Lualâ€˜aupai', 5),
('Luallauâ€˜luan', 5),
('Luallia', 5),
('Luapnuakniun', 5),
('Lucerraton', 13),
('Luentimiglia', 13),
('Luguvalinae', 13),
('Luimualiak', 5),
('Luimuan', 5),
('Luinmia', 5),
('Luiwhuinpaul', 5),
('LujjutÂ ', 9),
('Lujpisler', 9),
('Luku SmÃ¡smÃ­', 11),
('Lulom', 15),
('Lulottwen', 15),
('Lumomi', 4),
('Luna Nulmus', 11),
('Luneskispet', 4),
('Lungbuming', 3),
('Lunngov', 8),
('Luplisslon', 10),
('Lurgi', 2),
('Lurnekrosson', 8),
('LusÃ¤msa', 4),
('Lwilkustan', 10),
('Lwontyep', 15),
('Lyandin', 12),
('Lyantwen', 12),
('Lyet', 15),
('Lyolol', 15),
('Lyul Tyuk', 15),
('Madnish', 1),
('MÃ¢gÃ¢dydtÃ¢s', 6),
('Magnium', 13),
('Magons', 13),
('Maguvalium', 13),
('Maihuannial', 5),
('Mantelix', 13),
('Maqqlim', 9),
('Maromagus', 13),
('MÃ¢sgasÃªkko', 6),
('Mattlig', 16),
('Meldrakor', 14),
('Meldrand', 14),
('Mellekkwut', 15),
('Melusaphi', 14),
('Melusing', 14),
('Men Yelyot', 15),
('Mendiges', 2),
('Menghyen', 12),
('Menth', 14),
('Meslit', 4),
('Mesma', 4),
('Metkak', 10),
('Metlyen', 15),
('Metnul', 10),
('Mettukmet', 15),
('Mettulpyek', 15),
('Mexeg', 6),
('Miaâ€˜ial', 5),
('Miapâ€˜ainwiah', 5),
('Miapâ€˜iun', 5),
('Mibu Bagiti', 7),
('Middimsig', 1),
('Middodsek', 1),
('Mignusdog', 1),
('Mijnuk', 9),
('MÃ¯klÃ¯ssÃ¯t', 4),
('MimÃ¯ LÃ¯nspolÂ ', 4),
('Mimpis', 10),
('Mimshitdog', 1),
('Mimzashi', 3),
('MÃ­nÃ¡p Nuspal', 11),
('Mingkon', 8),
('Mingshing', 3),
('MÃ­npishnÃ¡t', 11),
('Minslip', 10),
('MÃ¯nstestam', 4),
('MÃ¯ntispassan', 4),
('Mintod', 1),
('MÃ­pnÃ¡', 11),
('Misentium', 13),
('MÃ¯slukon', 4),
('MÃ¯snÃ¯sek', 4),
('MÃ¯ssi', 4),
('MisxenÃ¢d', 6),
('Miuhâ€˜ainmaun', 5),
('Miuwniapâ€˜iuh', 5),
('Mizhogi', 7),
('Mjanlol', 10),
('MlÃ¢rglung', 9),
('Mledslut', 16),
('MlÃªjjagklil', 9),
('Mligkas', 16),
('Mlilnos', 10),
('MlimmÃªj', 9),
('MlonvÃ¢snglug', 9),
('Mlotgash', 16),
('Mlotnog', 16),
('MluslÃªrjÃ¢r', 9),
('MlyngmlunmÃ¢j', 9),
('Mogomaso', 7),
('Mokkanpim', 10),
('Moknega', 2),
('Molyuk', 15),
('Momuku', 7),
('Monglot', 16),
('Monnusgang', 8),
('Monsirnug', 8),
('Mopnek', 10),
('Moshdut', 1),
('Mosklil', 10),
('Moskomgot', 8),
('Mothand', 14),
('Motnishduk', 1),
('Mottem', 16),
('Movtestos', 8),
('Mo-Zhap', 2),
('Muahpua', 5),
('Muakkuimhia', 5),
('Muakwual', 5),
('Mualniu', 5),
('Muggok', 1),
('Muinâ€˜uilkiu', 5),
('MuknÃ¡', 11),
('Mumponnek', 8),
('Mumput', 15),
('Munbiring', 3),
('Munshlid', 16),
('Muslotnul', 15),
('Mutosu', 7),
('Mutsagnad', 1),
('Mutu Kamskip', 4),
('Mwinnlit', 10),
('Mwippakset', 10),
('Mwitten', 10),
('MyamlennyonÂ ', 12),
('MyamsÃ­nÂ ', 12),
('MymngÃ¢tvliq', 9),
('MymvyjgyjÂ ', 9),
('MyonsÃ©n', 12),
('Myottenput', 15),
('Myrlangslyv', 9),
('Myunsyin', 12),
('Myutmus', 15),
('Nabaku', 7),
('Nacondinium', 13),
('NÃ¢gxkotÃ¢s', 6),
('Nailliahlai', 5),
('NÃ¡ka Nishpus', 11),
('Nakpossrin', 10),
('NalfnÃ­k', 11),
('NalshkÃ­k', 11),
('Namazunu', 7),
('NamjlÃ¢lglyk', 9),
('NammÃ¡lin', 11),
('Nampi', 11),
('Namslyttlaj', 9),
('Nam-zu-Menpu', 2),
('Nangesh', 1),
('NannÃ­kflÃ¡nÃ­m', 11),
('NÃ¡nsÃ©n', 12),
('Napput', 10),
('Narseath', 14),
('Narthusing', 14),
('NashkÃ­n', 11),
('NÃ¡slÃ¡spisnÃ¡k', 11),
('NasnÃ«p', 4),
('NÃ¡snishkut', 11),
('NÃ¤snus', 4),
('Nasshmap', 11),
('Natkosh', 16),
('Natmogslit', 16),
('Natnig', 16),
('Natsensut', 1),
('Nattukgeg', 16),
('Naulâ€˜uiplium', 5),
('NaulluanÂ ', 5),
('Naventum', 13),
('Navkat', 8),
('Naxtag', 6),
('Nazu', 7),
('Nedgod', 1),
('Nek-Chozli', 2),
('Nekklun', 10),
('Nemlyan', 12),
('Nemvug', 8),
('Nenohawi', 7),
('Nepnap', 10),
('Neschan', 2),
('Neshgak', 16),
('Neshmlug', 16),
('Neskus', 1),
('Nesnosmil', 10),
('Nessitkosh', 1),
('NÃ«ssnÃ¯ SpimÃ¤', 4),
('NÃ«stisnipe', 4),
('Netmosh', 1),
('Netnog', 1),
('Netnuskan', 1),
('NÃªtstatu', 6),
('Net-zu-Zich', 2),
('Nevvorninson', 8),
('Nezane Zhuga', 7),
('Ngankongsop', 8),
('NglÃ¢sqlelmut', 9),
('Nglymvupqlyj', 9),
('Ngornelpong', 8),
('Ngotlurnip', 8),
('Nguklur', 8),
('Ngyjslur', 9),
('Ngyjvlajvyq', 9),
('Nialkian', 5),
('Niamoonis', 14),
('Niaplaum', 5),
('Niapluamkian', 5),
('Niggam', 16),
('Nigokebu', 7),
('Nigu', 3),
('Nijgurlavran', 8),
('Nimpunshlap', 11),
('Nimshangbiun', 3),
('Ninkon', 8),
('NÃ­nkyÃ©n', 12),
('Nisconir', 14),
('Niserion', 14),
('Nisgugnen', 8),
('Niske', 6),
('NismÃªdydxdig', 6),
('NÃ¯smÃ«ssaspol', 4),
('Nissantu', 4),
('NÃ¯ssnot', 4),
('Nistotqujrip', 8),
('Nitsangis', 1),
('Nitsod', 16),
('Niulkui', 5),
('Niuluapâ€˜iu', 5),
('Nlaggik', 16),
('NlÃ¢jjlujjlyj', 9),
('NlÃ¢sslurrot', 9),
('NlejjÃ¢vqlys', 9),
('Nleston', 10),
('Nlikkun', 10),
('Nlontlit', 10),
('Nlugklondin', 16),
('NlyrmlÃªjkÃªq', 9),
('Nogdasdet', 1),
('Nogglin', 16),
('Nogsogvir', 8),
('Nogtin', 8),
('Nohi Betigu', 7),
('Nokkomlal', 8),
('Noksip', 10),
('Nommidnak', 1),
('Nomwepen', 15),
('Nopi Tetozu', 7),
('Nopmut', 15),
('Nornekpoglor', 8),
('NoskÃ¯tstisse', 4),
('Nosnik', 10),
('Nossjem', 10),
('Notnul', 8),
('Novigulatium', 13),
('Nrattos', 10),
('Nrisplik', 10),
('Nrussiskak', 10),
('Nuakluippau', 5),
('Nuamkuikâ€˜au', 5),
('Nuawâ€˜ain', 5),
('Nuiâ€˜luamui', 5),
('Nuillui', 5),
('Nujlornantil', 8),
('Nujranjis', 8),
('NuklinpÃ­s', 11),
('Nulpwat', 10),
('Nulsorpunqam', 8),
('Numinzhiung', 3),
('NunepkÃ¤pko', 4),
('Nungtil', 8),
('Nunkwet', 15),
('NupskÃ­shpÃ¡', 11),
('Nuso', 4),
('Nuta', 4),
('Nutmin', 10),
('Nutsis', 10),
('Nutsluk', 10),
('Nutyep', 15),
('Nwinnek', 10),
('Nwonsel', 15),
('Nwunklil', 10),
('NyÃ¡ntyon', 12),
('Nyemsanten', 12),
('NygmÃ¢snÃ¢skÃª', 6),
('NyngakÃªg', 6),
('Nyulyep', 15),
('Oles', 15),
('Omtuk', 15),
('Ospusmet', 15),
('Paiwwaulkian', 5),
('PÃ¡massmÃ­s', 11),
('Pamswut', 10),
('Paraz-Chep', 2),
('PÃ¡shnit', 11),
('PasnÃ«kstÃ¯s', 4),
('Pedaina', 13),
('Pegsiv', 9),
('Pekizuwa', 7),
('PeknÃ¯nlasse', 4),
('Pekodu', 7),
('PeluppetnÃ«p', 4),
('Penel-Zhapli', 2),
('Pep Molen', 15),
('Peplon', 8),
('Pepmunsup', 8),
('Pepubo', 7),
('Pes-Nopimub', 2),
('Pespo', 4),
('Piaâ€˜niumhaup', 5),
('PÃ¯ksÃ¯lnossli', 4),
('PÃ­mshlus', 11),
('PÃ­nlinpÃ­skun', 11),
('PishlutÃ¡kÂ ', 11),
('Pispim', 10),
('PÃ¯sstako', 4),
('Pistris', 10),
('Piunliah', 5),
('Piunniul', 5),
('PlevsÃªs', 9),
('Pliknis', 10),
('PlisslÃ¢j', 9),
('Poggam', 8),
('Politellum', 13),
('Pollum', 13),
('Portonia', 13),
('Portusfelia', 13),
('Potentium', 13),
('Pottuktup', 15),
('Puahuan', 5),
('Pualuikiu', 5),
('PuamluipÂ ', 5),
('Puaphuan', 5),
('PuklipÃ¡paÂ ', 11),
('PuksnÃ­Â ', 11),
('PunÃ¡p Nalin', 11),
('PupmÃ¡flÃ¡', 11),
('Pusotlek', 15),
('Puzingi', 3),
('Pu-zu-Dirig', 2),
('Pwatnul', 10),
('Pyekonnut', 15),
('Pyetmollyut', 15),
('Pyggejjyj', 9),
('Pyljlyjngat', 9),
('Pyomsyet', 15),
('Pyottyullul', 15),
('Qanmeklajjuq', 8),
('QÃ¢vgojsivpag', 9),
('QegsojqenqÃ¢k', 9),
('Qevlortap', 8),
('Qimjollopnor', 8),
('QÃ­nlyan', 12),
('Qlajmlejjeng', 9),
('QluntlÃªvlang', 9),
('QlygplujtusÂ ', 9),
('QlysjlenqÃªq', 9),
('Qojlag', 8),
('Qonban', 12),
('QonnyÃ©n', 12),
('QyjjyljlÃ¢s', 9),
('Qyjslok', 9),
('Ramgig', 8),
('RÃ¡mlyan', 12),
('Ramporkok', 8),
('Razhinu', 3),
('Rechgobmo', 2),
('Remkammen', 12),
('Remkonnoggoq', 8),
('Rer-Zhapli', 2),
('Rhasaphir', 14),
('Ridgortaz', 2),
('Rilangmaku', 3),
('Rimzung', 3),
('Ringtilu', 3),
('Roplagnogram', 8),
('Rorrazguch', 2),
('Rotjensog', 8),
('Rotmutplug', 9),
('Ruchopnam', 2),
('Rulmingtog', 8),
('Rusikiring', 3),
('Rusrenkon', 8),
('Ryenghyon', 12),
('RyonkhyÃ­n', 12),
('RyonnonsyÃ¡n', 12),
('Ryontyan', 12),
('Ryqqlel', 9),
('Ryumsyen', 12),
('Sabu Takeko', 7),
('SÃ¢jpisgÃªskas', 9),
('SÃ¢kstÃªgni', 6),
('Samryon', 12),
('Samsposmo', 4),
('Sanghon', 12),
('Sangpin', 3),
('Sankwim', 10),
('Sanshag', 16),
('Saphirnax', 14),
('Saphongue', 14),
('SÃ¢rngyg', 9),
('SashtÃ¡n', 11),
('Sasi LÃ¯nspolÂ ', 4),
('SasmÃ¯nspol', 4),
('Sasopezu', 7),
('Scal', 14),
('Scathusin', 14),
('Sciaceri', 13),
('Scolvago', 14),
('Scongue', 14),
('SdisskÃ¢t', 6),
('Sednus', 1),
('Segge', 6),
('Seltimmlus', 10),
('Sengaddet', 1),
('Senlyan', 12),
('Sensutdom', 1),
('Sentyon', 12),
('Sepriolanum', 13),
('Seriffir', 14),
('Serroth', 14),
('SÃªsglijvuk', 9),
('SÃªsklang', 9),
('Sespyot', 15),
('Setchig-Bemo', 2),
('Setnup', 10),
('Sgiskit', 6),
('Shagtlom', 16),
('Shandam', 1),
('Shangchakin', 3),
('ShantenlÃ­n', 12),
('Shekgeg', 1),
('Shekkud', 1),
('Shemsagdas', 1),
('Shenshinkish', 1),
('Shetsho', 2),
('Shettugmok', 16),
('Shikgush', 16),
('ShÃ­mghen', 12),
('Shimglus', 16),
('Shimgu', 3),
('Shimsi', 3),
('ShÃ­mtyen', 12),
('Shimumzi', 3),
('Shipindun', 3),
('Shisgudken', 1),
('Shizang', 3),
('ShlafnÃ­k', 11),
('Shlagglin', 16),
('ShlashtÃ­p', 11),
('Shlasklak', 16),
('ShlÃ¡sshpusmÃ¡Â ', 11),
('ShmÃ¡knissup', 11),
('Shodgemkes', 1),
('Shoknat', 16),
('Shontit', 16),
('Shosmik', 16),
('Shotnud', 16),
('Shozum-Chor', 2),
('Shyimqon', 12),
('Siddimsun', 1),
('Si-Kirablub', 2),
('SÃ¯mlÃ¯tspu', 4),
('Sinajo', 7),
('SÃ­nasskÃ­', 11),
('Singkasa', 3),
('SipvlÃ¢ngglat', 9),
('SÃ­shpin', 11),
('SÃ­skuntipÂ ', 11),
('Sistrim', 10),
('SivsÃªs', 9),
('Sjistan', 10),
('Sjonplilnut', 10),
('SkanslÃ¤', 4),
('SkansomotstÃ¯', 4),
('SkaspÃ¯tusek', 4),
('SkatilskapÃ«', 4),
('SkÃªgottukÃ¢d', 6),
('SkesgiÂ ', 6),
('SkinmakuslÃ¯', 4),
('SkÃ¯sokÃ¤skes', 4),
('Skoplup', 4),
('SkupnalkÃ­l', 11),
('SkusmÃ¤tu', 4),
('Slagshlut', 16),
('Slemmjes', 10),
('Sletten', 16),
('Sloggosh', 16),
('Sloshteg', 16),
('Slospikmos', 10),
('Slukkisnrem', 10),
('Slukpik', 10),
('Slurglung', 9),
('SnalftÃ­ptÃ­t', 11),
('SnotlÃ¯nkas', 4),
('Snuflat', 11),
('Soka', 4),
('SolkÃ¯skap', 4),
('Solsupkom', 8),
('Sorrenkam', 8),
('Sotgi-Pabu', 2),
('SoxxkÃªskug', 6),
('SpÃ¡shlamu', 11),
('SpÃ«ksoÂ ', 4),
('SpÃ«skÃ¯mÃ¯s', 4),
('Spikolassnot', 4),
('Spitip Koni', 4),
('SpotÃ¯tÃ¤sstu', 4),
('StÃ¡flaktuk', 11),
('StasnulÂ ', 11),
('Staxnynit', 6),
('StÃªggÃ¢dÃ¢k', 6),
('StÃªgnÃ¢d', 6),
('Stor', 14),
('Stunslu', 11),
('Sukslip', 10),
('Sumnos', 15),
('Sungudshen', 1),
('Sunkhanten', 12),
('SunkÃ­nsta', 11),
('Sustingos', 8),
('Swintusnap', 10),
('Swistlas', 10),
('Swolpak', 10),
('Syamryon', 12),
('Syentun', 12),
('Syettyon', 15),
('TÃ¢gkÃ¢tnynsgÃ¢', 6),
('TagottÃªk', 6),
('Taknoddut', 1),
('TÃ¡kpasÃ­', 11),
('TalÃ¤sspan', 4),
('TÃ¡mÃ­supsÃ­', 11),
('TapaksÃ¯t', 4),
('TapÃ¯smÃ¯s', 4),
('Tartarli-Sen', 2),
('Ta-Shet', 2),
('Tassunsnis', 11),
('Tato', 4),
('Taz-Geslub', 2),
('Techushgor', 2),
('Tednogsen', 1),
('Tekokige', 7),
('Telenmol', 15),
('Temguk', 16),
('Tengud', 1),
('Tenqan', 12),
('Tenshlas', 16),
('Tensul', 10),
('Tensyon', 12),
('Tesmiggag', 1),
('Tesqar', 8),
('Tiamaug', 14),
('Tiathame', 14),
('Tigglusmit', 16),
('Tillommek', 8),
('Timman', 10),
('Timodo', 7),
('Tindukanguim', 3),
('Tingot', 8),
('Tingzhang', 3),
('Tinjukman', 8),
('Tinnuvnoj', 8),
('TÃ¯sÃ«ssÃ¯tspÃ«l', 4),
('Tishnusted', 1),
('TÃ¯smÃ¯', 4),
('Tisogi Mumi', 7),
('TÃ¯spe', 4),
('TÃ¯sspal', 4),
('Titapi', 2),
('Titmuntod', 1),
('Tlajnlipngyg', 9),
('Tlamklug', 16),
('Tlamshleggik', 16),
('Tlannjot', 10),
('Tlappjuntris', 10),
('Tlasklunsjen', 10),
('Tlegklon', 16),
('TlÃªvnejrik', 9),
('Tlommik', 16),
('Tlukpis', 10),
('Todminnik', 1),
('Todtogshis', 1),
('Tokskit', 6),
('TomÃ¯ LÃ¯nspolÂ ', 4),
('Toneptwus', 15),
('Toniki', 7),
('Tonnik', 10),
('TopÃ¯kstuluÂ ', 4),
('Topnut', 15),
('ToqqlisjekÂ ', 9),
('Toria', 13),
('Torran', 8),
('Torton', 13),
('Tosgongiglan', 8),
('Toshkittlam', 16),
('Tospep', 10),
('Tossjok', 10),
('Tottlishmok', 16),
('Toxti', 6),
('Triae', 13),
('Trimontium', 13),
('Tschako Heba', 7),
('Tschakumo', 7),
('Tschege', 7),
('Tschogezu', 7),
('Tschonata', 7),
('Tufnutpal', 11),
('TuletnÃ¯s', 4),
('Tulmotten', 15),
('Tulnennak', 10),
('Tumetscho', 7),
('Tumlyen', 15),
('Tunep', 15),
('Tungig', 16),
('Tunsun', 12),
('TunsyÃ¡msÃ­n', 12),
('Tupmij', 9),
('Tupsusnun', 15),
('Tutschemi', 7),
('Tuttyon', 15),
('Twentonyet', 15),
('Twumkup', 15),
('Twuslyenes', 15),
('Tyamqon', 12),
('Tyanten', 12),
('TyemywÃ­n', 12),
('Tyollet', 15),
('Tyonlyun', 12),
('Tyonsyet', 15),
('Tyonweltus', 15),
('Typhong', 14),
('Tyunghyon', 12),
('Uknunep', 15),
('Ukon', 15),
('Ullyut', 15),
('Umchangi', 3),
('Umsizushing', 3),
('Ungbatim', 3),
('Upkyol', 15),
('Upolum', 15),
('Uraring', 3),
('Usnopun', 15),
('Vagniacate', 13),
('Valine', 13),
('Vardotas', 13),
('Vectoria', 13),
('VÃªjjliqqlym', 9),
('Vengrov', 8),
('Vengsul', 8),
('Vennavio', 13),
('Venterolix', 13),
('Ventia', 13),
('Ventupizzi', 13),
('Verulanum', 13),
('Viamut', 14),
('Vindinium', 13),
('Vinovium', 13),
('Viscor', 14),
('Vlivmlimpis', 9),
('VlyvjÃªjslÃ¢jÂ ', 9),
('Volvagiath', 14),
('Vomtorjenjog', 8),
('VukvlÃ¢ngsev', 9),
('Wamana', 7),
('Watodo', 7),
('Watonaka', 7),
('Wauâ€˜huik', 5),
('Waukiannuak', 5),
('Weju', 7),
('Wellyenol', 15),
('Weplek', 15),
('Wesobe', 7),
('Wiahmaippiun', 5),
('Wialauhpua', 5),
('Wimapi', 7),
('Wimghon', 12),
('Wiunaul', 5),
('Wiwajuno', 7),
('Wonten', 12),
('Wualuikuaâ€˜au', 5),
('Wukolkyut', 15),
('WyÃ©nshÃ­n', 12),
('XÃ¢gsmikdyxmÃ¢', 6),
('XÃ¢kÃ¢dsÃ¢k', 6),
('XÃ¢kkug', 6),
('XÃ¢sÃ¢d', 6),
('Xegskitxki', 6),
('XgogymynsÃ¢k', 6),
('XgytoxtÃ¢sdek', 6),
('XkÃ¢gnix', 6),
('XkÃ¢gsmÃªdsÃªk', 6),
('XkÃ¢xaxsÃ¢gtok', 6),
('XkÃ¢xxukxki', 6),
('XkÃªtxkaxgyk', 6),
('Xkytskyxmis', 6),
('XmÃ¢xtegded', 6),
('XmuknÃ¢kskyt', 6),
('XmuxgÃ¢tin', 6),
('XnÃ¢ddyd', 6),
('XnÃªgÃ¢smÃª', 6),
('Xnekdo', 6),
('XnekguxixgÃªk', 6),
('XnÃªxgykxteg', 6),
('Xnykgu', 6),
('XtÃ¢kgÃªnskyx', 6),
('Xtuky', 6),
('YamrÃ­n', 12),
('Yekses', 15),
('Yemtunshen', 12),
('Yensyum', 15),
('Yepep', 15),
('Yepnyl', 15),
('Yesenton', 15),
('Yommut', 15),
('Yukeptot', 15),
('Yuklek', 15),
('Yuntultop', 15),
('Yunukut', 15),
('Ywinlyan', 12),
('Zamchinel', 2),
('Zamgesho', 2),
('Zanggamchi', 3),
('Zangi', 2),
('Zangkuli', 3),
('Zhapikotu', 7),
('Zhechlem-Ki', 2),
('Zhedroschi', 2),
('Zhema-Gorkog', 2),
('Zhe-Netchu', 2),
('Zhepartu', 2),
('Zherkekgi', 2),
('Zherte-Chim', 2),
('Zher-zu-Gor', 2),
('Zhiba-Limshi', 3),
('Zhidogu', 7),
('Zhigum', 3),
('Zhinbikung', 3),
('Zhipgiper', 2),
('Zhokme', 2),
('Zhomigu', 7),
('Zhungzhia', 3),
('Zich-Zamzhap', 2),
('Zi-Gimgang', 3),
('Zik-Dag', 2),
('Zingpua', 3),
('Zomimu Nisi', 7),
('Zozutschena', 7),
('Zuchnam-Chi', 2),
('Zumzak', 2);

INSERT INTO soccer_simulation.team (team_name, system_id)
    SELECT team_name
        , system_id
    FROM soccer_simulation.team_temp
    WHERE system_id IN (
        SELECT system_id
        FROM soccer_simulation.`system`
    );